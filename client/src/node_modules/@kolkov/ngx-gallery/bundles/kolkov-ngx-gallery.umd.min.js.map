{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://@kolkov/ngx-gallery/lib/ngx-gallery.service.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-preview/ngx-gallery-preview.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-animation.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-image/ngx-gallery-image.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-order.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-thumbnails/ngx-gallery-thumbnails.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-action.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-layout.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-image-size.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-options.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-ordered-image.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-arrows/ngx-gallery-arrows.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-action/ngx-gallery-action.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-bullets/ngx-gallery-bullets.component.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery.module.ts","ng://@kolkov/ngx-gallery/lib/ngx-gallery-image.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","NgxGalleryService","renderer","this","swipeHandlers","Map","prototype","manageSwipe","status","element","id","nextHandler","prevHandler","handlers","getSwipeHandlers","set","listen","nativeElement","map","handler","removeSwipeHandlers","validateUrl","url","replace","RegExp","getBackgroundUrl","image","getFileType","fileSource","fileExtension","split","pop","toLowerCase","get","delete","Renderer2","Injectable","providedIn","NgxGalleryPreviewComponent","sanitization","elementRef","helperService","changeDetectorRef","showSpinner","positionLeft","positionTop","zoomValue","loading","rotateValue","index","previewOpen","EventEmitter","previewClose","activeChange","isOpen","initialX","initialY","initialLeft","initialTop","isMove","ngOnInit","arrows","arrowsAutoHide","ngOnChanges","changes","_this","swipe","showNext","showPrev","ngOnDestroy","keyDownListener","onMouseEnter","onMouseLeave","onKeyDown","keyboardNavigation","isKeyboardPrev","isKeyboardNext","closeOnEsc","isKeyboardEsc","close","open","emit","show","forceFullscreen","manageFullscreen","closeFullscreen","stopAutoPlay","imageMouseEnter","autoPlay","autoPlayPauseOnHover","imageMouseLeave","startAutoPlay","timer","setTimeout","autoPlayInterval","clearTimeout","showAtIndex","canShowNext","images","canShowPrev","infinityMove","fullscreen","doc","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","openFullscreen","getSafeUrl","bypassSecurityTrustUrl","zoomIn","canZoomIn","zoomStep","zoomMax","zoomOut","canZoomOut","zoomMin","resetPosition","rotateLeft","rotateRight","getTransform","bypassSecurityTrustStyle","canDragOnZoom","zoom","mouseDownHandler","getClientX","getClientY","preventDefault","mouseUpHandler","mouseMoveHandler","touches","clientX","clientY","keyCode","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","isFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","first","animation","_show","src","type","srcIndex","description","descriptions","markForCheck","isLoaded","previewImage","onload","img","complete","naturalWidth","DomSanitizer","ElementRef","ChangeDetectorRef","Input","Output","ViewChild","HostListener","Component","selector","template","changeDetection","ChangeDetectionStrategy","OnPush","NgxGalleryAnimation","Fade","Slide","Rotate","Zoom","NgxGalleryImageComponent","imageClick","canChangeImage","reset","selectedIndex","getImages","lazyLoading","indexes_1","prevIndex","nextIndex","filter","indexOf","setInterval","clearInterval","handleClick","event","clickable","stopPropagation","setChangeTimeout","timeout","NgxGalleryOrder","Column","Row","Page","NgxGalleryThumbnailsComponent","minStopIndex","validateIndex","moveRight","moveLeft","remainingCountValue","rows","columns","mouseenter","setDefaultPosition","remainingCount","slice","order","stopIndex","moveSize","hasLink","links","canMoveRight","maxIndex","getMaxIndex","setThumbnailsPosition","canMoveLeft","getThumbnailLeft","calculatedIndex","Math","floor","ceil","getThumbnailPosition","getThumbnailTop","getThumbnailWidth","getThumbnailDimension","getThumbnailHeight","thumbnailsLeft","thumbnailsMarginLeft","margin","canShowArrows","getVisibleCount","newIndex","count","getSafeStyle","action","icon","disabled","titleText","onClick","NgxGalleryLayout","ThumbnailsTop","ThumbnailsBottom","NgxGalleryImageSize","Cover","Contain","obj","preventDefaults","undefined","breakpoint","use","source","defaultValue","width","height","fullWidth","layout","startIndex","linkTarget","imagePercent","imageArrows","imageArrowsAutoHide","imageSwipe","imageAnimation","imageSize","imageAutoPlay","imageAutoPlayInterval","imageAutoPlayPauseOnHover","imageInfinityMove","imageActions","NgxGalleryAction","imageDescription","imageBullets","thumbnails","thumbnailsColumns","thumbnailsRows","thumbnailsPercent","thumbnailsMargin","thumbnailsArrows","thumbnailsArrowsAutoHide","thumbnailsSwipe","thumbnailsMoveSize","thumbnailsOrder","thumbnailsRemainingCount","thumbnailsAsLinks","thumbnailsAutoHide","thumbnailMargin","thumbnailSize","thumbnailActions","thumbnailClasses","preview","previewDescription","previewArrows","previewArrowsAutoHide","previewSwipe","previewFullscreen","previewForceFullscreen","previewCloseOnClick","previewCloseOnEsc","previewKeyboardNavigation","previewAnimation","previewAutoPlay","previewAutoPlayInterval","previewAutoPlayPauseOnHover","previewInfinityMove","previewZoom","previewZoomStep","previewZoomMax","previewZoomMin","previewRotate","previewDownload","previewCustom","previewBullets","arrowPrevIcon","arrowNextIcon","closeIcon","fullscreenIcon","spinnerIcon","zoomInIcon","zoomOutIcon","rotateLeftIcon","rotateRightIcon","downloadIcon","actions","NgxGalleryComponent","myElement","options","imagesReady","change","previewChange","oldImagesLength","prevBreakpoint","opt","NgxGalleryOptions","sortOptions","setBreakpoint","setOptions","checkFullWidth","currentOptions","ngDoCheck","oldImages","setImages","resetThumbnails","ngAfterViewInit","onResize","fullWidthTimeout","getImageHeight","getThumbnailsHeight","getThumbnailsMarginTop","getThumbnailsMarginBottom","openPreview","previewEnabled","onPreviewOpen","onPreviewClose","selectFromImage","select","selectFromThumbnails","previewSelect","moveThumbnailsRight","moveThumbnailsLeft","canMoveThumbnailsRight","canMoveThumbnailsLeft","body","clientWidth","left","parentNode","innerWidth","forEach","big","medium","small","smallImages","mediumImages","NgxGalleryOrderedImage","bigImages","labels","label","breakpoints","window","concat","__spread","a","sort","combineOptions","second","keys","val","HostBinding","encapsulation","ViewEncapsulation","None","providers","NgxGalleryArrowsComponent","prevClick","nextClick","handlePrevClick","handleNextClick","NgxGalleryActionComponent","closeClick","NgxGalleryBulletsComponent","active","bulletChange","getBullets","handleChange","CustomHammerConfig","_super","apply","overrides","pinch","enable","rotate","__","constructor","create","__extends","HammerGestureConfig","NgxGalleryModule","NgModule","declarations","imports","CommonModule","exports","provide","HAMMER_GESTURE_CONFIG","useClass"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {ElementRef, Injectable, Renderer2} from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NgxGalleryService {\n  private swipeHandlers: Map<string, (() => void)[]> = new Map<string, (() => void)[]>();\n\n  constructor(private renderer: Renderer2) {\n  }\n\n  manageSwipe(status: boolean, element: ElementRef, id: string, nextHandler: () => void, prevHandler: () => void): void {\n\n    const handlers = this.getSwipeHandlers(id);\n\n    // swipeleft and swiperight are available only if hammerjs is included\n    try {\n      if (status && !handlers) {\n        this.swipeHandlers.set(id, [\n          this.renderer.listen(element.nativeElement, 'swipeleft', () => nextHandler()),\n          this.renderer.listen(element.nativeElement, 'swiperight', () => prevHandler())\n        ]);\n      } else if (!status && handlers) {\n        handlers.map((handler) => handler());\n        this.removeSwipeHandlers(id);\n      }\n    } catch (e) {\n    }\n  }\n\n  validateUrl(url: string): string {\n    if (url.replace) {\n      return url.replace(new RegExp(' ', 'g'), '%20')\n        .replace(new RegExp('\\'', 'g'), '%27');\n    } else {\n      return url;\n    }\n  }\n\n  getBackgroundUrl(image: string) {\n    return 'url(\\'' + this.validateUrl(image) + '\\')';\n  }\n\n  getFileType (fileSource: string): string {\n    const fileExtension = fileSource.split('.').pop().toLowerCase();\n    if (fileExtension === 'avi' || fileExtension === 'flv'\n      || fileExtension === 'wmv' || fileExtension === 'mov'\n      || fileExtension === 'mp4') {\n      return 'video';\n    }\n    return 'image';\n}\n\n  private getSwipeHandlers(id: string): (() => void)[] | undefined {\n    return this.swipeHandlers.get(id);\n  }\n\n  private removeSwipeHandlers(id: string): void {\n    this.swipeHandlers.delete(id);\n  }\n}\n","import {\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  Renderer2,\n  SimpleChanges,\n  ViewChild\n} from '@angular/core';\nimport {DomSanitizer, SafeResourceUrl, SafeStyle, SafeUrl} from '@angular/platform-browser';\nimport {NgxGalleryService} from '../ngx-gallery.service';\nimport {NgxGalleryAction} from '../ngx-gallery-action';\n\n\n@Component({\n  selector: 'ngx-gallery-preview',\n  templateUrl: './ngx-gallery-preview.component.html',\n  styleUrls: ['./ngx-gallery-preview.component.scss'],\n  // encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryPreviewComponent implements OnInit, OnDestroy, OnChanges {\n  src: SafeUrl;\n  srcIndex: number;\n  description: string;\n  type: string;\n  showSpinner = false;\n  positionLeft = 0;\n  positionTop = 0;\n  zoomValue = 1;\n  loading = false;\n  rotateValue = 0;\n  index = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() fullscreen: boolean;\n  @Input() forceFullscreen: boolean;\n  @Input() closeOnClick: boolean;\n  @Input() closeOnEsc: boolean;\n  @Input() keyboardNavigation: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() closeIcon: string;\n  @Input() fullscreenIcon: string;\n  @Input() spinnerIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() zoom: boolean;\n  @Input() zoomStep: number;\n  @Input() zoomMax: number;\n  @Input() zoomMin: number;\n  @Input() zoomInIcon: string;\n  @Input() zoomOutIcon: string;\n  @Input() animation: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() rotate: boolean;\n  @Input() rotateLeftIcon: string;\n  @Input() rotateRightIcon: string;\n  @Input() download: boolean;\n  @Input() downloadIcon: string;\n  @Input() bullets: string;\n\n  @Output() previewOpen = new EventEmitter();\n  @Output() previewClose = new EventEmitter();\n  @Output() activeChange = new EventEmitter<number>();\n\n  @ViewChild('previewImage') previewImage: ElementRef;\n\n  private isOpen = false;\n  private timer;\n  private initialX = 0;\n  private initialY = 0;\n  private initialLeft = 0;\n  private initialTop = 0;\n  private isMove = false;\n\n  private keyDownListener: () => void;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n              private helperService: NgxGalleryService, private renderer: Renderer2,\n              private changeDetectorRef: ChangeDetectorRef) {\n  }\n\n  ngOnInit() {\n    if (this.arrows && this.arrowsAutoHide) {\n      this.arrows = false;\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.swipe) {\n      this.helperService.manageSwipe(this.swipe, this.elementRef,\n        'preview', () => this.showNext(), () => this.showPrev());\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.keyDownListener) {\n      this.keyDownListener();\n    }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    if (this.arrowsAutoHide && !this.arrows) {\n      this.arrows = true;\n    }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    if (this.arrowsAutoHide && this.arrows) {\n      this.arrows = false;\n    }\n  }\n\n  onKeyDown(e) {\n    if (this.isOpen) {\n      if (this.keyboardNavigation) {\n        if (this.isKeyboardPrev(e)) {\n          this.showPrev();\n        } else if (this.isKeyboardNext(e)) {\n          this.showNext();\n        }\n      }\n      if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n        this.close();\n      }\n    }\n  }\n\n  open(index: number): void {\n    this.previewOpen.emit();\n\n    this.index = index;\n    this.isOpen = true;\n    this.show(true);\n\n    if (this.forceFullscreen) {\n      this.manageFullscreen();\n    }\n\n    this.keyDownListener = this.renderer.listen('window', 'keydown', (e) => this.onKeyDown(e));\n  }\n\n  close(): void {\n    this.isOpen = false;\n    this.closeFullscreen();\n    this.previewClose.emit();\n\n    this.stopAutoPlay();\n\n    if (this.keyDownListener) {\n      this.keyDownListener();\n    }\n  }\n\n  imageMouseEnter(): void {\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.stopAutoPlay();\n    }\n  }\n\n  imageMouseLeave(): void {\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.startAutoPlay();\n    }\n  }\n\n  startAutoPlay(): void {\n    if (this.autoPlay) {\n      this.stopAutoPlay();\n\n      this.timer = setTimeout(() => {\n        if (!this.showNext()) {\n          this.index = -1;\n          this.showNext();\n        }\n      }, this.autoPlayInterval);\n    }\n  }\n\n  stopAutoPlay(): void {\n    if (this.timer) {\n      clearTimeout(this.timer);\n    }\n  }\n\n  showAtIndex(index: number): void {\n    this.index = index;\n    this.show();\n  }\n\n  showNext(): boolean {\n    if (this.canShowNext()) {\n      this.index++;\n\n      if (this.index === this.images.length) {\n        this.index = 0;\n      }\n\n      this.show();\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  showPrev(): void {\n    if (this.canShowPrev()) {\n      this.index--;\n\n      if (this.index < 0) {\n        this.index = this.images.length - 1;\n      }\n\n      this.show();\n    }\n  }\n\n  canShowNext(): boolean {\n    if (this.loading) {\n      return false;\n    } else if (this.images) {\n      return this.infinityMove || this.index < this.images.length - 1;\n    } else {\n      return false;\n    }\n  }\n\n  canShowPrev(): boolean {\n    if (this.loading) {\n      return false;\n    } else if (this.images) {\n      return this.infinityMove || this.index > 0;\n    } else {\n      return false;\n    }\n  }\n\n  manageFullscreen(): void {\n    if (this.fullscreen || this.forceFullscreen) {\n      const doc = document as any;\n\n      if (!doc.fullscreenElement && !doc.mozFullScreenElement\n        && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n        this.openFullscreen();\n      } else {\n        this.closeFullscreen();\n      }\n    }\n  }\n\n  getSafeUrl(image: string): SafeUrl {\n    return this.sanitization.bypassSecurityTrustUrl(image);\n  }\n\n  getFileType (fileSource: string): string {\n    return this.helperService.getFileType(fileSource);\n  }\n\n  zoomIn(): void {\n    if (this.canZoomIn()) {\n      this.zoomValue += this.zoomStep;\n\n      if (this.zoomValue > this.zoomMax) {\n        this.zoomValue = this.zoomMax;\n      }\n    }\n  }\n\n  zoomOut(): void {\n    if (this.canZoomOut()) {\n      this.zoomValue -= this.zoomStep;\n\n      if (this.zoomValue < this.zoomMin) {\n        this.zoomValue = this.zoomMin;\n      }\n\n      if (this.zoomValue <= 1) {\n        this.resetPosition();\n      }\n    }\n  }\n\n  rotateLeft(): void {\n    this.rotateValue -= 90;\n  }\n\n  rotateRight(): void {\n    this.rotateValue += 90;\n  }\n\n  getTransform(): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\n  }\n\n  canZoomIn(): boolean {\n    return this.zoomValue < this.zoomMax;\n  }\n\n  canZoomOut(): boolean {\n    return this.zoomValue > this.zoomMin;\n  }\n\n  canDragOnZoom() {\n    return this.zoom && this.zoomValue > 1;\n  }\n\n  mouseDownHandler(e): void {\n    if (this.canDragOnZoom()) {\n      this.initialX = this.getClientX(e);\n      this.initialY = this.getClientY(e);\n      this.initialLeft = this.positionLeft;\n      this.initialTop = this.positionTop;\n      this.isMove = true;\n\n      e.preventDefault();\n    }\n  }\n\n  mouseUpHandler(e): void {\n    this.isMove = false;\n  }\n\n  mouseMoveHandler(e) {\n    if (this.isMove) {\n      this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n      this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n    }\n  }\n\n  private getClientX(e): number {\n    return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n  }\n\n  private getClientY(e): number {\n    return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n  }\n\n  private resetPosition() {\n    if (this.zoom) {\n      this.positionLeft = 0;\n      this.positionTop = 0;\n    }\n  }\n\n  private isKeyboardNext(e): boolean {\n    return e.keyCode === 39;\n  }\n\n  private isKeyboardPrev(e): boolean {\n    return e.keyCode === 37;\n  }\n\n  private isKeyboardEsc(e): boolean {\n    return e.keyCode === 27;\n  }\n\n  private openFullscreen(): void {\n    const element = document.documentElement as any;\n\n    if (element.requestFullscreen) {\n      element.requestFullscreen();\n    } else if (element.msRequestFullscreen) {\n      element.msRequestFullscreen();\n    } else if (element.mozRequestFullScreen) {\n      element.mozRequestFullScreen();\n    } else if (element.webkitRequestFullscreen) {\n      element.webkitRequestFullscreen();\n    }\n  }\n\n  private closeFullscreen(): void {\n    if (this.isFullscreen()) {\n      const doc = document as any;\n\n      if (doc.exitFullscreen) {\n        doc.exitFullscreen();\n      } else if (doc.msExitFullscreen) {\n        doc.msExitFullscreen();\n      } else if (doc.mozCancelFullScreen) {\n        doc.mozCancelFullScreen();\n      } else if (doc.webkitExitFullscreen) {\n        doc.webkitExitFullscreen();\n      }\n    }\n  }\n\n  private isFullscreen() {\n    const doc = document as any;\n\n    return doc.fullscreenElement || doc.webkitFullscreenElement\n      || doc.mozFullScreenElement || doc.msFullscreenElement;\n  }\n\n\n  private show(first = false) {\n    this.loading = true;\n    this.stopAutoPlay();\n\n    this.activeChange.emit(this.index);\n\n    if (first || !this.animation) {\n      this._show();\n    } else {\n      setTimeout(() => this._show(), 600);\n    }\n  }\n\n  private _show() {\n    this.zoomValue = 1;\n    this.rotateValue = 0;\n    this.resetPosition();\n\n    this.src = this.getSafeUrl(this.images[this.index] as string);\n    this.type = this.getFileType(this.images[this.index] as string);\n    this.srcIndex = this.index;\n    this.description = this.descriptions[this.index];\n    this.changeDetectorRef.markForCheck();\n\n    setTimeout(() => {\n      if (this.isLoaded(this.previewImage.nativeElement) || this.type === 'video') {\n        this.loading = false;\n        this.startAutoPlay();\n        this.changeDetectorRef.markForCheck();\n      } else if (this.type === 'video') {\n\n      }\n      else {\n        setTimeout(() => {\n          if (this.loading) {\n            this.showSpinner = true;\n            this.changeDetectorRef.markForCheck();\n          }\n        });\n\n        this.previewImage.nativeElement.onload = () => {\n          this.loading = false;\n          this.showSpinner = false;\n          this.previewImage.nativeElement.onload = null;\n          this.startAutoPlay();\n          this.changeDetectorRef.markForCheck();\n        };\n      }\n    });\n  }\n\n  private isLoaded(img): boolean {\n    if (!img.complete) {\n      return false;\n    }\n\n    return !(typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0);\n  }\n\n}\n","export class NgxGalleryAnimation {\n    static Fade = 'fade';\n    static Slide = 'slide';\n    static Rotate = 'rotate';\n    static Zoom = 'zoom';\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {DomSanitizer, SafeStyle} from '@angular/platform-browser';\nimport {NgxGalleryService} from '../ngx-gallery.service';\nimport {NgxGalleryOrderedImage} from '../ngx-gallery-ordered-image';\nimport {NgxGalleryAction} from '../ngx-gallery-action';\nimport {NgxGalleryAnimation} from '../ngx-gallery-animation';\n\n@Component({\n  selector: 'ngx-gallery-image',\n  templateUrl: './ngx-gallery-image.component.html',\n  styleUrls: ['./ngx-gallery-image.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryImageComponent implements OnInit, OnChanges {\n  @Input() images: NgxGalleryOrderedImage[];\n  @Input() clickable: boolean;\n  @Input() selectedIndex: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() animation: string;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() bullets: boolean;\n\n  @Output() imageClick = new EventEmitter();\n  @Output() activeChange = new EventEmitter();\n\n  canChangeImage = true;\n\n  private timer;\n\n  constructor(private sanitization: DomSanitizer,\n              private elementRef: ElementRef, private helperService: NgxGalleryService) {\n  }\n\n  // @HostBinding('style.display') public display = 'inline-block';\n  // @HostBinding('style.background-color') public color = 'lime';\n\n  ngOnInit() {\n    if (this.arrows && this.arrowsAutoHide) {\n      this.arrows = false;\n    }\n\n    if (this.autoPlay) {\n      this.startAutoPlay();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.swipe) {\n      this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', () => this.showNext(), () => this.showPrev());\n    }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    if (this.arrowsAutoHide && !this.arrows) {\n      this.arrows = true;\n    }\n\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.stopAutoPlay();\n    }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    if (this.arrowsAutoHide && this.arrows) {\n      this.arrows = false;\n    }\n\n    if (this.autoPlay && this.autoPlayPauseOnHover) {\n      this.startAutoPlay();\n    }\n  }\n\n  reset(index: number): void {\n    this.selectedIndex = index;\n  }\n\n  getImages(): NgxGalleryOrderedImage[] {\n    if (!this.images) {\n      return [];\n    }\n\n    if (this.lazyLoading) {\n      const indexes = [this.selectedIndex];\n      const prevIndex = this.selectedIndex - 1;\n\n      if (prevIndex === -1 && this.infinityMove) {\n        indexes.push(this.images.length - 1);\n      } else if (prevIndex >= 0) {\n        indexes.push(prevIndex);\n      }\n\n      const nextIndex = this.selectedIndex + 1;\n\n      if (nextIndex === this.images.length && this.infinityMove) {\n        indexes.push(0);\n      } else if (nextIndex < this.images.length) {\n        indexes.push(nextIndex);\n      }\n\n      return this.images.filter((img, i) => indexes.indexOf(i) !== -1);\n    } else {\n      return this.images;\n    }\n  }\n\n  startAutoPlay(): void {\n    this.stopAutoPlay();\n\n    this.timer = setInterval(() => {\n      if (!this.showNext()) {\n        this.selectedIndex = -1;\n        this.showNext();\n      }\n    }, this.autoPlayInterval);\n  }\n\n  stopAutoPlay() {\n    if (this.timer) {\n      clearInterval(this.timer);\n    }\n  }\n\n  handleClick(event: Event, index: number): void {\n    if (this.clickable) {\n      this.imageClick.emit(index);\n\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  show(index: number) {\n    this.selectedIndex = index;\n    this.activeChange.emit(this.selectedIndex);\n    this.setChangeTimeout();\n  }\n\n  showNext(): boolean {\n    if (this.canShowNext() && this.canChangeImage) {\n      this.selectedIndex++;\n\n      if (this.selectedIndex === this.images.length) {\n        this.selectedIndex = 0;\n      }\n\n      this.activeChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  showPrev(): void {\n    if (this.canShowPrev() && this.canChangeImage) {\n      this.selectedIndex--;\n\n      if (this.selectedIndex < 0) {\n        this.selectedIndex = this.images.length - 1;\n      }\n\n      this.activeChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n    }\n  }\n\n  setChangeTimeout() {\n    this.canChangeImage = false;\n    let timeout = 1000;\n\n    if (this.animation === NgxGalleryAnimation.Slide\n      || this.animation === NgxGalleryAnimation.Fade) {\n      timeout = 500;\n    }\n\n    setTimeout(() => {\n      this.canChangeImage = true;\n    }, timeout);\n  }\n\n  canShowNext(): boolean {\n    if (this.images) {\n      return this.infinityMove || this.selectedIndex < this.images.length - 1;\n    } else {\n      return false;\n    }\n  }\n\n  canShowPrev(): boolean {\n    if (this.images) {\n      return this.infinityMove || this.selectedIndex > 0;\n    } else {\n      return false;\n    }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n\n  getFileType(fileSource: string) {\n    return this.helperService.getFileType(fileSource);\n  }\n}\n","export class NgxGalleryOrder {\n  static Column = 1;\n  static Row = 2;\n  static Page = 3;\n}\n","import {\n  ChangeDetectionStrategy,\n  Component,\n  ElementRef,\n  EventEmitter,\n  HostListener,\n  Input,\n  OnChanges,\n  OnInit,\n  Output,\n  SimpleChanges\n} from '@angular/core';\nimport {DomSanitizer, SafeResourceUrl, SafeStyle} from '@angular/platform-browser';\nimport {NgxGalleryService} from '../ngx-gallery.service';\nimport {NgxGalleryAction} from '../ngx-gallery-action';\nimport {NgxGalleryOrder} from '../ngx-gallery-order';\n\n@Component({\n  selector: 'ngx-gallery-thumbnails',\n  templateUrl: './ngx-gallery-thumbnails.component.html',\n  styleUrls: ['./ngx-gallery-thumbnails.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryThumbnailsComponent implements OnInit, OnChanges {\n  thumbnailsLeft: string;\n  thumbnailsMarginLeft: string;\n  mouseenter: boolean;\n  remainingCountValue: number;\n\n  minStopIndex = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() links: string[];\n  @Input() labels: string[];\n  @Input() linkTarget: string;\n  @Input() columns: number;\n  @Input() rows: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() margin: number;\n  @Input() selectedIndex: number;\n  @Input() clickable: boolean;\n  @Input() swipe: boolean;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() moveSize: number;\n  @Input() order: number;\n  @Input() remainingCount: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n\n  @Output() activeChange = new EventEmitter();\n\n  private index = 0;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n              private helperService: NgxGalleryService) {\n  }\n\n  ngOnInit() {\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (changes.selectedIndex) {\n      this.validateIndex();\n    }\n\n    if (changes.swipe) {\n      this.helperService.manageSwipe(this.swipe, this.elementRef,\n        'thumbnails', () => this.moveRight(), () => this.moveLeft());\n    }\n\n    if (this.images) {\n      this.remainingCountValue = this.images.length - (this.rows * this.columns);\n    }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n    this.mouseenter = true;\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n    this.mouseenter = false;\n  }\n\n  reset(index: number): void {\n    this.selectedIndex = index;\n    this.setDefaultPosition();\n\n    this.index = 0;\n    this.validateIndex();\n  }\n\n  getImages(): string[] | SafeResourceUrl[] {\n    if (!this.images) {\n      return [];\n    }\n\n    if (this.remainingCount) {\n      return this.images.slice(0, this.rows * this.columns);\n    } else if (this.lazyLoading && this.order !== NgxGalleryOrder.Row) {\n      let stopIndex = 0;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\n      } else if (this.order === NgxGalleryOrder.Page) {\n        stopIndex = this.index + ((this.columns * this.rows) * 2);\n      }\n\n      if (stopIndex <= this.minStopIndex) {\n        stopIndex = this.minStopIndex;\n      } else {\n        this.minStopIndex = stopIndex;\n      }\n\n      return this.images.slice(0, stopIndex);\n    } else {\n      return this.images;\n    }\n  }\n\n  handleClick(event: Event, index: number): void {\n    if (!this.hasLink(index)) {\n      this.selectedIndex = index;\n      this.activeChange.emit(index);\n\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  hasLink(index: number): boolean {\n    if (this.links && this.links.length && this.links[index]) {\n      return true;\n    }\n  }\n\n  moveRight(): void {\n    if (this.canMoveRight()) {\n      this.index += this.moveSize;\n      const maxIndex = this.getMaxIndex() - this.columns;\n\n      if (this.index > maxIndex) {\n        this.index = maxIndex;\n      }\n\n      this.setThumbnailsPosition();\n    }\n  }\n\n  moveLeft(): void {\n    if (this.canMoveLeft()) {\n      this.index -= this.moveSize;\n\n      if (this.index < 0) {\n        this.index = 0;\n      }\n\n      this.setThumbnailsPosition();\n    }\n  }\n\n  canMoveRight(): boolean {\n    return this.index + this.columns < this.getMaxIndex();\n  }\n\n  canMoveLeft(): boolean {\n    return this.index !== 0;\n  }\n\n  getThumbnailLeft(index: number): SafeStyle {\n    let calculatedIndex;\n\n    if (this.order === NgxGalleryOrder.Column) {\n      calculatedIndex = Math.floor(index / this.rows);\n    } else if (this.order === NgxGalleryOrder.Page) {\n      calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);\n    } else if (this.order === NgxGalleryOrder.Row && this.remainingCount) {\n      calculatedIndex = index % this.columns;\n    } else {\n      calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n    }\n\n    return this.getThumbnailPosition(calculatedIndex, this.columns);\n  }\n\n  getThumbnailTop(index: number): SafeStyle {\n    let calculatedIndex;\n\n    if (this.order === NgxGalleryOrder.Column) {\n      calculatedIndex = index % this.rows;\n    } else if (this.order === NgxGalleryOrder.Page) {\n      calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);\n    } else if (this.order === NgxGalleryOrder.Row && this.remainingCount) {\n      calculatedIndex = Math.floor(index / this.columns);\n    } else {\n      calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n    }\n\n    return this.getThumbnailPosition(calculatedIndex, this.rows);\n  }\n\n  getThumbnailWidth(): SafeStyle {\n    return this.getThumbnailDimension(this.columns);\n  }\n\n  getThumbnailHeight(): SafeStyle {\n    return this.getThumbnailDimension(this.rows);\n  }\n\n  setThumbnailsPosition(): void {\n    this.thumbnailsLeft = -((100 / this.columns) * this.index) + '%';\n\n    this.thumbnailsMarginLeft = -((this.margin - (((this.columns - 1)\n      * this.margin) / this.columns)) * this.index) + 'px';\n  }\n\n  setDefaultPosition(): void {\n    this.thumbnailsLeft = '0px';\n    this.thumbnailsMarginLeft = '0px';\n  }\n\n  canShowArrows(): boolean {\n    if (this.remainingCount) {\n      return false;\n    } else {\n      return this.arrows && this.images && this.images.length > this.getVisibleCount()\n        && (!this.arrowsAutoHide || this.mouseenter);\n    }\n  }\n\n  validateIndex(): void {\n    if (this.images) {\n      let newIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n        newIndex = Math.floor(this.selectedIndex / this.rows);\n      } else {\n        newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n      }\n\n      if (this.remainingCount) {\n        newIndex = 0;\n      }\n\n      if (newIndex < this.index || newIndex >= this.index + this.columns) {\n        const maxIndex = this.getMaxIndex() - this.columns;\n        this.index = newIndex > maxIndex ? maxIndex : newIndex;\n\n        this.setThumbnailsPosition();\n      }\n    }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n\n  getFileType (fileSource: string): string {\n    return this.helperService.getFileType(fileSource);\n  }\n\n  private getThumbnailPosition(index: number, count: number): SafeStyle {\n    return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\n      + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\n  }\n\n  private getThumbnailDimension(count: number): SafeStyle {\n    if (this.margin !== 0) {\n      return this.getSafeStyle('calc(' + (100 / count) + '% - '\n        + (((count - 1) * this.margin) / count) + 'px)');\n    } else {\n      return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\n    }\n  }\n\n  private getMaxIndex(): number {\n    if (this.order === NgxGalleryOrder.Page) {\n      let maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);\n\n      if (this.images.length % this.getVisibleCount() > this.columns) {\n        maxIndex += this.columns;\n      } else {\n        maxIndex += this.images.length % this.getVisibleCount();\n      }\n\n      return maxIndex;\n    } else {\n      return Math.ceil(this.images.length / this.rows);\n    }\n  }\n\n  private getVisibleCount(): number {\n    return this.columns * this.rows;\n  }\n\n  private getSafeStyle(value: string): SafeStyle {\n    return this.sanitization.bypassSecurityTrustStyle(value);\n  }\n}\n","export interface INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n}\n\nexport class NgxGalleryAction implements INgxGalleryAction {\n    icon: string;\n    disabled?: boolean;\n    titleText?: string;\n\n    onClick: (event: Event, index: number) => void;\n\n    constructor(action: INgxGalleryAction) {\n        this.icon = action.icon;\n        this.disabled = action.disabled ? action.disabled : false;\n        this.titleText = action.titleText ? action.titleText : '';\n\n        this.onClick = action.onClick;\n    }\n}\n","export class NgxGalleryLayout {\n    static ThumbnailsTop = 'thumbnails-top';\n    static ThumbnailsBottom = 'thumbnails-bottom';\n}\n","export class NgxGalleryImageSize {\n    static Cover = 'cover';\n    static Contain = 'contain';\n}\n","import {NgxGalleryAction} from './ngx-gallery-action';\nimport {NgxGalleryOrder} from './ngx-gallery-order';\nimport {NgxGalleryLayout} from './ngx-gallery-layout';\nimport {NgxGalleryAnimation} from './ngx-gallery-animation';\nimport {NgxGalleryImageSize} from './ngx-gallery-image-size';\n\nexport interface INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    thumbnailClasses?: string[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n}\n\nexport class NgxGalleryOptions implements INgxGalleryOptions {\n    width?: string;\n    height?: string;\n    breakpoint?: number;\n    fullWidth?: boolean;\n    layout?: string;\n    startIndex?: number;\n    linkTarget?: string;\n    lazyLoading?: boolean;\n    image?: boolean;\n    imagePercent?: number;\n    imageArrows?: boolean;\n    imageArrowsAutoHide?: boolean;\n    imageSwipe?: boolean;\n    imageAnimation?: string;\n    imageSize?: string;\n    imageAutoPlay?: boolean;\n    imageAutoPlayInterval?: number;\n    imageAutoPlayPauseOnHover?: boolean;\n    imageInfinityMove?: boolean;\n    imageActions?: NgxGalleryAction[];\n    imageDescription?: boolean;\n    imageBullets?: boolean;\n    thumbnails?: boolean;\n    thumbnailsColumns?: number;\n    thumbnailsRows?: number;\n    thumbnailsPercent?: number;\n    thumbnailsMargin?: number;\n    thumbnailsArrows?: boolean;\n    thumbnailsArrowsAutoHide?: boolean;\n    thumbnailsSwipe?: boolean;\n    thumbnailsMoveSize?: number;\n    thumbnailsOrder?: NgxGalleryOrder;\n    thumbnailsRemainingCount?: boolean;\n    thumbnailsAsLinks?: boolean;\n    thumbnailsAutoHide?: boolean;\n    thumbnailMargin?: number;\n    thumbnailSize?: string;\n    thumbnailActions?: NgxGalleryAction[];\n    thumbnailClasses?: string[];\n    preview?: boolean;\n    previewDescription?: boolean;\n    previewArrows?: boolean;\n    previewArrowsAutoHide?: boolean;\n    previewSwipe?: boolean;\n    previewFullscreen?: boolean;\n    previewForceFullscreen?: boolean;\n    previewCloseOnClick?: boolean;\n    previewCloseOnEsc?: boolean;\n    previewKeyboardNavigation?: boolean;\n    previewAnimation?: boolean;\n    previewAutoPlay?: boolean;\n    previewAutoPlayInterval?: number;\n    previewAutoPlayPauseOnHover?: boolean;\n    previewInfinityMove?: boolean;\n    previewZoom?: boolean;\n    previewZoomStep?: number;\n    previewZoomMax?: number;\n    previewZoomMin?: number;\n    previewRotate?: boolean;\n    previewDownload?: boolean;\n    previewCustom?: (index: number) => void;\n    previewBullets?: boolean;\n    arrowPrevIcon?: string;\n    arrowNextIcon?: string;\n    closeIcon?: string;\n    fullscreenIcon?: string;\n    spinnerIcon?: string;\n    zoomInIcon?: string;\n    zoomOutIcon?: string;\n    rotateLeftIcon?: string;\n    rotateRightIcon?: string;\n    downloadIcon?: string;\n    actions?: NgxGalleryAction[];\n\n    constructor(obj: INgxGalleryOptions) {\n\n        const preventDefaults = obj.breakpoint === undefined ? false : true;\n\n        function use<T>(source: T, defaultValue: T): T {\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\n        }\n\n        this.breakpoint = use(obj.breakpoint, undefined);\n        this.width = use(obj.width, '500px');\n        this.height = use(obj.height, '400px');\n        this.fullWidth = use(obj.fullWidth, false);\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\n        this.startIndex = use(obj.startIndex, 0);\n        this.linkTarget = use(obj.linkTarget, '_blank');\n        this.lazyLoading = use(obj.lazyLoading, true);\n\n        this.image = use(obj.image, true);\n        this.imagePercent = use(obj.imagePercent, 75);\n        this.imageArrows = use(obj.imageArrows, true);\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\n        this.imageSwipe = use(obj.imageSwipe, false);\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\n        if (obj && obj.imageActions && obj.imageActions.length) {\n            obj.imageActions = obj.imageActions.map(action => new NgxGalleryAction(action));\n        }\n        this.imageActions = use(obj.imageActions, []);\n        this.imageDescription = use(obj.imageDescription, false);\n        this.imageBullets = use(obj.imageBullets, false);\n\n        this.thumbnails = use(obj.thumbnails, true);\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\n            obj.thumbnailActions = obj.thumbnailActions.map(action => new NgxGalleryAction(action));\n        }\n        this.thumbnailActions = use(obj.thumbnailActions, []);\n        this.thumbnailClasses = use(obj.thumbnailClasses, []);\n\n\n        this.preview = use(obj.preview, true);\n        this.previewDescription = use(obj.previewDescription, true);\n        this.previewArrows = use(obj.previewArrows, true);\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\n        this.previewSwipe = use(obj.previewSwipe, false);\n        this.previewFullscreen = use(obj.previewFullscreen, false);\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\n        this.previewAnimation = use(obj.previewAnimation, true);\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\n        this.previewZoom = use(obj.previewZoom, false);\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\n        this.previewRotate = use(obj.previewRotate, false);\n        this.previewDownload = use(obj.previewDownload, false);\n        this.previewCustom = use(obj.previewCustom, undefined);\n        this.previewBullets = use(obj.previewBullets, false);\n\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\n        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\n\n        if (obj && obj.actions && obj.actions.length) {\n            obj.actions = obj.actions.map(action => new NgxGalleryAction(action));\n        }\n        this.actions = use(obj.actions, []);\n    }\n}\n","import {SafeResourceUrl} from '@angular/platform-browser';\n\nexport interface INgxGalleryOrderedImage {\n  src: string | SafeResourceUrl;\n  type: string;\n  index: number;\n}\n\nexport class NgxGalleryOrderedImage implements INgxGalleryOrderedImage {\n  src: string | SafeResourceUrl;\n  type: string;\n  index: number;\n\n  constructor(obj: INgxGalleryOrderedImage) {\n    this.src = obj.src;\n    this.type = obj.type;\n    this.index = obj.index;\n  }\n}\n","import {\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  Component,\n  DoCheck,\n  ElementRef,\n  EventEmitter,\n  HostBinding,\n  HostListener,\n  Input,\n  OnInit,\n  Output,\n  ViewChild,\n  ViewEncapsulation\n} from '@angular/core';\nimport {NgxGalleryPreviewComponent} from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport {NgxGalleryImageComponent} from './ngx-gallery-image/ngx-gallery-image.component';\nimport {NgxGalleryThumbnailsComponent} from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport {SafeResourceUrl} from '@angular/platform-browser';\nimport {NgxGalleryService} from './ngx-gallery.service';\nimport {NgxGalleryOptions} from './ngx-gallery-options';\nimport {NgxGalleryImage} from './ngx-gallery-image';\nimport {NgxGalleryOrderedImage} from './ngx-gallery-ordered-image';\nimport {NgxGalleryLayout} from './ngx-gallery-layout';\n\n@Component({\n  selector: 'ngx-gallery',\n  templateUrl: './ngx-gallery.component.html',\n  styleUrls: ['./ngx-gallery.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  providers: [NgxGalleryService],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryComponent implements OnInit, DoCheck, AfterViewInit {\n  @Input() options: NgxGalleryOptions[] = [{}];\n  @Input() images: NgxGalleryImage[];\n\n  @Output() imagesReady = new EventEmitter();\n  // tslint:disable-next-line:no-output-native\n  @Output() change = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n  @Output() previewOpen = new EventEmitter();\n  @Output() previewClose = new EventEmitter();\n  @Output() previewChange = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n\n  smallImages: string[] | SafeResourceUrl[];\n  mediumImages: NgxGalleryOrderedImage[];\n  bigImages: string[] | SafeResourceUrl[];\n  descriptions: string[];\n  links: string[];\n  labels: string[];\n\n  oldImages: NgxGalleryImage[];\n  oldImagesLength = 0;\n\n  selectedIndex = 0;\n  previewEnabled: boolean;\n\n  currentOptions: NgxGalleryOptions;\n\n  private breakpoint: number | undefined = undefined;\n  private prevBreakpoint: number | undefined = undefined;\n  private fullWidthTimeout: any;\n\n  @ViewChild(NgxGalleryPreviewComponent) preview: NgxGalleryPreviewComponent;\n  @ViewChild(NgxGalleryImageComponent) image: NgxGalleryImageComponent;\n  @ViewChild(NgxGalleryThumbnailsComponent) thumbnails: NgxGalleryThumbnailsComponent;\n\n  @HostBinding('style.width') width: string;\n  @HostBinding('style.height') height: string;\n  @HostBinding('style.transform') left: string;\n\n  constructor(private myElement: ElementRef, private helperService: NgxGalleryService) {\n  }\n\n  ngOnInit() {\n    this.options = this.options.map((opt) => new NgxGalleryOptions(opt));\n    this.sortOptions();\n    this.setBreakpoint();\n    this.setOptions();\n    this.checkFullWidth();\n    if (this.currentOptions) {\n      this.selectedIndex = this.currentOptions.startIndex as number;\n    }\n  }\n\n  ngDoCheck(): void {\n    if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\n      || (this.images !== this.oldImages)) {\n      this.oldImagesLength = this.images.length;\n      this.oldImages = this.images;\n      this.setOptions();\n      this.setImages();\n\n      if (this.images && this.images.length) {\n        this.imagesReady.emit();\n      }\n\n      if (this.image) {\n        this.image.reset(this.currentOptions.startIndex as number);\n      }\n\n      if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails\n        && this.images.length <= 1) {\n        this.currentOptions.thumbnails = false;\n        this.currentOptions.imageArrows = false;\n      }\n\n      this.resetThumbnails();\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.checkFullWidth();\n  }\n\n  @HostListener('window:resize') onResize() {\n    this.setBreakpoint();\n\n    if (this.prevBreakpoint !== this.breakpoint) {\n      this.setOptions();\n      this.resetThumbnails();\n    }\n\n    if (this.currentOptions && this.currentOptions.fullWidth) {\n\n      if (this.fullWidthTimeout) {\n        clearTimeout(this.fullWidthTimeout);\n      }\n\n      this.fullWidthTimeout = setTimeout(() => {\n        this.checkFullWidth();\n      }, 200);\n    }\n  }\n\n  getImageHeight(): string {\n    return (this.currentOptions && this.currentOptions.thumbnails) ?\n      this.currentOptions.imagePercent + '%' : '100%';\n  }\n\n  getThumbnailsHeight(): string {\n    if (this.currentOptions && this.currentOptions.image) {\n      return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\n        + this.currentOptions.thumbnailsMargin + 'px)';\n    } else {\n      return '100%';\n    }\n  }\n\n  getThumbnailsMarginTop(): string {\n    if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n      return this.currentOptions.thumbnailsMargin + 'px';\n    } else {\n      return '0px';\n    }\n  }\n\n  getThumbnailsMarginBottom(): string {\n    if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n      return this.currentOptions.thumbnailsMargin + 'px';\n    } else {\n      return '0px';\n    }\n  }\n\n  openPreview(index: number): void {\n    if (this.currentOptions.previewCustom) {\n      this.currentOptions.previewCustom(index);\n    } else {\n      this.previewEnabled = true;\n      this.preview.open(index);\n    }\n  }\n\n  onPreviewOpen(): void {\n    this.previewOpen.emit();\n\n    if (this.image && this.image.autoPlay) {\n      this.image.stopAutoPlay();\n    }\n  }\n\n  onPreviewClose(): void {\n    this.previewEnabled = false;\n    this.previewClose.emit();\n\n    if (this.image && this.image.autoPlay) {\n      this.image.startAutoPlay();\n    }\n  }\n\n  selectFromImage(index: number) {\n    this.select(index);\n  }\n\n  selectFromThumbnails(index: number) {\n    this.select(index);\n\n    if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\n      && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\n      this.openPreview(this.selectedIndex);\n    }\n  }\n\n  show(index: number): void {\n    this.select(index);\n  }\n\n  showNext(): void {\n    this.image.showNext();\n  }\n\n  showPrev(): void {\n    this.image.showPrev();\n  }\n\n  canShowNext(): boolean {\n    if (this.images && this.currentOptions) {\n      return !!(this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1);\n    } else {\n      return false;\n    }\n  }\n\n  canShowPrev(): boolean {\n    if (this.images && this.currentOptions) {\n      return !!(this.currentOptions.imageInfinityMove || this.selectedIndex > 0);\n    } else {\n      return false;\n    }\n  }\n\n  previewSelect(index: number) {\n    this.previewChange.emit({index, image: this.images[index]});\n  }\n\n  moveThumbnailsRight() {\n    this.thumbnails.moveRight();\n  }\n\n  moveThumbnailsLeft() {\n    this.thumbnails.moveLeft();\n  }\n\n  canMoveThumbnailsRight() {\n    return this.thumbnails.canMoveRight();\n  }\n\n  canMoveThumbnailsLeft() {\n    return this.thumbnails.canMoveLeft();\n  }\n\n  private resetThumbnails() {\n    if (this.thumbnails) {\n      this.thumbnails.reset(this.currentOptions.startIndex as number);\n    }\n  }\n\n  private select(index: number) {\n    this.selectedIndex = index;\n\n    this.change.emit({\n      index,\n      image: this.images[index]\n    });\n  }\n\n  private checkFullWidth(): void {\n    if (this.currentOptions && this.currentOptions.fullWidth) {\n      this.width = document.body.clientWidth + 'px';\n      this.left = 'translateX(' + (-(document.body.clientWidth -\n        this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px)';\n    }\n  }\n\n  private setImages(): void {\n    this.images.forEach((img) =>\n        img.type = this.helperService.getFileType(img.url as string || img.big as string || img.medium as string || img.small as string || '')\n    );\n    this.smallImages = this.images.map((img) => img.small as string);\n    this.mediumImages = this.images.map((img, i) => new NgxGalleryOrderedImage({\n      src: img.medium,\n      type: img.type,\n      index: i\n    }));\n    this.bigImages = this.images.map((img) => img.big as string);\n    this.descriptions = this.images.map((img) => img.description as string);\n    this.links = this.images.map((img) => img.url as string);\n    this.labels = this.images.map((img) => img.label as string);\n  }\n\n  private setBreakpoint(): void {\n    this.prevBreakpoint = this.breakpoint;\n    let breakpoints;\n\n    if (typeof window !== 'undefined') {\n      breakpoints = this.options.filter((opt) => opt.breakpoint >= window.innerWidth)\n        .map((opt) => opt.breakpoint);\n    }\n\n    if (breakpoints && breakpoints.length) {\n      this.breakpoint = breakpoints.pop();\n    } else {\n      this.breakpoint = undefined;\n    }\n  }\n\n  private sortOptions(): void {\n    this.options = [\n      ...this.options.filter((a) => a.breakpoint === undefined),\n      ...this.options\n        .filter((a) => a.breakpoint !== undefined)\n        .sort((a, b) => b.breakpoint - a.breakpoint)\n    ];\n  }\n\n  private setOptions(): void {\n    this.currentOptions = new NgxGalleryOptions({});\n\n    this.options\n      .filter((opt) => opt.breakpoint === undefined || opt.breakpoint >= this.breakpoint)\n      .map((opt) => this.combineOptions(this.currentOptions, opt));\n\n    this.width = this.currentOptions.width as string;\n    this.height = this.currentOptions.height as string;\n  }\n\n  private combineOptions(first: NgxGalleryOptions, second: NgxGalleryOptions) {\n    Object.keys(second).map((val) => first[val] = second[val] !== undefined ? second[val] : first[val]);\n  }\n\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-arrows',\n  templateUrl: './ngx-gallery-arrows.component.html',\n  styleUrls: ['./ngx-gallery-arrows.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryArrowsComponent implements OnInit {\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n\n  @Output() prevClick = new EventEmitter();\n  @Output() nextClick = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  handlePrevClick(): void {\n    this.prevClick.emit();\n  }\n\n  handleNextClick(): void {\n    this.nextClick.emit();\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-action',\n  templateUrl: './ngx-gallery-action.component.html',\n  styleUrls: ['./ngx-gallery-action.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryActionComponent implements OnInit/*, AfterViewInit*/ {\n  @Input() icon: string;\n  @Input() disabled = false;\n  @Input() titleText = '';\n\n  @Output() closeClick: EventEmitter<Event> = new EventEmitter();\n\n  constructor() {\n  }\n\n  ngOnInit() {\n  }\n\n  handleClick(event: Event) {\n    if (!this.disabled) {\n      this.closeClick.emit(event);\n    }\n\n    event.stopPropagation();\n    event.preventDefault();\n  }\n}\n","import {ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output} from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-bullets',\n  templateUrl: './ngx-gallery-bullets.component.html',\n  styleUrls: ['./ngx-gallery-bullets.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryBulletsComponent implements OnInit {\n  @Input() count: number;\n  @Input() active = 0;\n\n  @Output() bulletChange = new EventEmitter();\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  getBullets(): number[] {\n    return Array(this.count);\n  }\n\n  handleChange(event: Event, index: number): void {\n    this.bulletChange.emit(index);\n  }\n}\n","import { NgModule, Injectable } from '@angular/core';\nimport {NgxGalleryComponent} from './ngx-gallery.component';\nimport {NgxGalleryImageComponent} from './ngx-gallery-image/ngx-gallery-image.component';\nimport {NgxGalleryArrowsComponent} from './ngx-gallery-arrows/ngx-gallery-arrows.component';\nimport {NgxGalleryThumbnailsComponent} from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport {NgxGalleryPreviewComponent} from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport {NgxGalleryActionComponent} from './ngx-gallery-action/ngx-gallery-action.component';\nimport {NgxGalleryBulletsComponent} from './ngx-gallery-bullets/ngx-gallery-bullets.component';\nimport {CommonModule} from '@angular/common';\nimport {HAMMER_GESTURE_CONFIG, HammerGestureConfig} from '@angular/platform-browser';\n\n@Injectable()\nexport class CustomHammerConfig extends HammerGestureConfig  {\n  overrides = {\n    pinch: { enable: false },\n    rotate: { enable: false }\n  } as any;\n}\n\n\n@NgModule({\n  declarations: [\n    NgxGalleryComponent,\n    NgxGalleryImageComponent,\n    NgxGalleryArrowsComponent,\n    NgxGalleryThumbnailsComponent,\n    NgxGalleryPreviewComponent,\n    NgxGalleryActionComponent,\n    NgxGalleryBulletsComponent\n  ],\n  imports: [ CommonModule],\n  exports: [NgxGalleryComponent],\n  providers: [\n    { provide: HAMMER_GESTURE_CONFIG, useClass: CustomHammerConfig }\n  ]\n})\nexport class NgxGalleryModule {\n}\n","import { SafeResourceUrl } from '@angular/platform-browser';\n\nexport interface INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    type?: string;\n    label?: string;\n}\n\nexport class NgxGalleryImage implements INgxGalleryImage {\n    small?: string | SafeResourceUrl;\n    medium?: string | SafeResourceUrl;\n    big?: string | SafeResourceUrl;\n    description?: string;\n    url?: string;\n    type?: string;\n    label?: string;\n\n    constructor(obj: INgxGalleryImage) {\n        this.small = obj.small;\n        this.medium = obj.medium;\n        this.big = obj.big;\n        this.description = obj.description;\n        this.url = obj.url;\n        this.type = obj.type;\n        this.label = obj.label;\n    }\n}\n"]}