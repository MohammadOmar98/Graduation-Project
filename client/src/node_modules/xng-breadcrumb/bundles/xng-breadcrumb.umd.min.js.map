{"version":3,"sources":["../../../../libs/xng-breadcrumb/src/lib/breadcrumb-item.directive.ts","../../../../node_modules/tslib/tslib.es6.js","../../../../libs/xng-breadcrumb/src/lib/breadcrumb.service.ts","../../../../libs/xng-breadcrumb/src/lib/breadcrumb.component.ts","../../../../libs/xng-breadcrumb/src/lib/breadcrumb.module.ts"],"names":["Directive","args","selector","Object","create","__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","PATH_PARAM","isNonEmpty","obj","keys","BreadcrumbService","activatedRoute","router","this","baseHref","dynamicBreadcrumbStore","currentBreadcrumbs","previousBreadcrumbs","breadcrumbs","BehaviorSubject","breadcrumbs$","asObservable","detectRouteChanges","prototype","_this","events","pipe","filter","event","NavigationEnd","subscribe","rootBreadcrumb","getRootBreadcrumb","prepareBreadcrumbList","root","rootConfig","config","find","path","extractObject","_a","data","breadcrumb","storeItem","getFromStore","alias","assign","routeLink","getQueryParamsFromPreviousList","prepareBreadcrumbItem","routeLinkPrefix","_b","parseRouteData","routeConfig","resolvedSegment","resolvePathSegment","label","extractLabel","isAutoGeneratedLabel","autoGeneratedLabel","breadcrumbItem","firstChild","lastCrumb","setQueryParamsForActiveBreadcrumb","breadcrumbsToShow","item","skip","matchRegex","routeRegex","match","RegExp","segment","includes","entries","snapshot","params","forEach","_c","key","replace","queryParams","fragment","lastItem","undefined","mergeWithBaseChildData","baseChild","loadChildren","_loadedConfig","routes","route","children","childConfig","set","updateArgs","breadcrumbObject","startsWith","slice","buildRegex","ensureLeadingSlash","updateStore","apply","updateCurrentBreadcrumbs","storeItemIndex","findIndex","itemIndex","resolvedParam","Injectable","providedIn","ActivatedRoute","Router","BreadcrumbComponent","breadcrumbService","_separator","autoGenerate","preserveQueryParams","preserveFragment","class","defineProperty","TemplateRef","separatorTemplate","ngOnInit","subscription","map","ngOnDestroy","unsubscribe","handleRoute","routeInterceptor","navigate","Component","template","encapsulation","ViewEncapsulation","None","ContentChild","BreadcrumbItemDirective","static","read","Input","NgModule","declarations","imports","CommonModule","RouterModule","exports"],"mappings":"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","sourcesContent":["import { Directive } from '@angular/core';\n\n/**\n * This directive is used to customize the breadcrumb label behavior\n * *xngBreadcrumbItem directive can be used in the child element of xng-breadcrumb\n * Usage: refer to the demo - app.component.html\n */\n@Directive({\n  selector: '[xngBreadcrumbItem]',\n})\nexport class BreadcrumbItemDirective {}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { filter } from 'rxjs/operators';\nimport { Breadcrumb } from './types/breadcrumb';\nimport {\n  BreadcrumbObject,\n  BreadcrumbFunction,\n} from './types/breadcrumb.config';\n\ntype BreadcrumbConfig = BreadcrumbObject | BreadcrumbFunction | string;\ntype StoreMatcherKey = 'routeLink' | 'routeRegex' | 'alias';\nexport type BreadcrumbDefinition = Breadcrumb & BreadcrumbObject;\nconst PATH_PARAM = {\n  PREFIX: ':',\n  REGEX_IDENTIFIER: '/:[^/]+',\n  REGEX_REPLACER: '/[^/]+',\n};\nconst ALIAS_PREFIX = '@';\nconst isNonEmpty = (obj: unknown): boolean => {\n  return obj && Object.keys(obj).length > 0;\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class BreadcrumbService {\n  private baseHref = '/';\n\n  /**\n   * dynamicBreadcrumbStore holds information about dynamically updated breadcrumbs.\n   * Breadcrumbs can be set from anywhere (component, service) in the app.\n   * On every breadcrumb update check this store and use the info if available.\n   */\n  private dynamicBreadcrumbStore: BreadcrumbDefinition[] = [];\n\n  /**\n   * breadcrumbList for the current route\n   * When breadcrumb info is changed dynamically, check if the currentBreadcrumbs is effected\n   * If effected, update the change and emit a new stream\n   */\n  private currentBreadcrumbs: BreadcrumbDefinition[] = [];\n  private previousBreadcrumbs: BreadcrumbDefinition[] = [];\n\n  /**\n   * Breadcrumbs observable to be subscribed by BreadcrumbComponent\n   * Emits on every route change OR dynamic update of breadcrumb\n   */\n  private breadcrumbs = new BehaviorSubject<BreadcrumbDefinition[]>([]);\n  public breadcrumbs$ = this.breadcrumbs.asObservable();\n\n  constructor(private activatedRoute: ActivatedRoute, private router: Router) {\n    this.detectRouteChanges();\n  }\n\n  /**\n   * Whenever route changes build breadcrumb list again\n   */\n  private detectRouteChanges() {\n    this.router.events\n      .pipe(filter((event) => event instanceof NavigationEnd))\n      .subscribe(() => {\n        this.previousBreadcrumbs = this.currentBreadcrumbs;\n        // breadcrumb label for base OR root path. Usually, this can be set as 'Home'\n        const rootBreadcrumb = this.getRootBreadcrumb();\n        this.currentBreadcrumbs = rootBreadcrumb ? [rootBreadcrumb] : [];\n        this.prepareBreadcrumbList(this.activatedRoute.root, this.baseHref);\n      });\n  }\n\n  private getRootBreadcrumb() {\n    const rootConfig = this.router.config.find((config) => config.path === '');\n    const rootBreadcrumb = this.extractObject(rootConfig?.data?.breadcrumb);\n    const storeItem = this.getFromStore(rootBreadcrumb.alias, '/');\n\n    if (isNonEmpty(rootBreadcrumb) || isNonEmpty(storeItem)) {\n      return {\n        ...storeItem,\n        ...rootBreadcrumb,\n        routeLink: this.baseHref,\n        ...this.getQueryParamsFromPreviousList('/'),\n      };\n    }\n  }\n\n  private prepareBreadcrumbItem(\n    activatedRoute: ActivatedRoute,\n    routeLinkPrefix: string\n  ): BreadcrumbDefinition {\n    const { path, breadcrumb } = this.parseRouteData(\n      activatedRoute.routeConfig\n    );\n    const resolvedSegment = this.resolvePathSegment(path, activatedRoute);\n    const routeLink = `${routeLinkPrefix}${resolvedSegment}`;\n    const storeItem = this.getFromStore(breadcrumb.alias, routeLink);\n\n    const label = this.extractLabel(\n      storeItem?.label || breadcrumb?.label,\n      resolvedSegment\n    );\n    let isAutoGeneratedLabel = false;\n    let autoGeneratedLabel = '';\n    if (!label) {\n      isAutoGeneratedLabel = true;\n      autoGeneratedLabel = resolvedSegment;\n    }\n\n    return {\n      ...storeItem,\n      ...breadcrumb,\n      label: isAutoGeneratedLabel ? autoGeneratedLabel : label,\n      routeLink,\n      isAutoGeneratedLabel,\n      ...this.getQueryParamsFromPreviousList(routeLink),\n    };\n  }\n\n  private prepareBreadcrumbList(\n    activatedRoute: ActivatedRoute,\n    routeLinkPrefix: string\n  ): Breadcrumb[] {\n    if (activatedRoute.routeConfig && activatedRoute.routeConfig.path) {\n      const breadcrumbItem = this.prepareBreadcrumbItem(\n        activatedRoute,\n        routeLinkPrefix\n      );\n      this.currentBreadcrumbs.push(breadcrumbItem);\n\n      if (activatedRoute.firstChild) {\n        return this.prepareBreadcrumbList(\n          activatedRoute.firstChild,\n          breadcrumbItem.routeLink + '/'\n        );\n      }\n    } else if (activatedRoute.firstChild) {\n      return this.prepareBreadcrumbList(\n        activatedRoute.firstChild,\n        routeLinkPrefix\n      );\n    }\n    const lastCrumb = this.currentBreadcrumbs[\n      this.currentBreadcrumbs.length - 1\n    ];\n    this.setQueryParamsForActiveBreadcrumb(lastCrumb, activatedRoute);\n\n    // remove breadcrumb items that needs to be hidden\n    const breadcrumbsToShow = this.currentBreadcrumbs.filter(\n      (item) => !item.skip\n    );\n\n    this.breadcrumbs.next(breadcrumbsToShow);\n  }\n\n  private getFromStore(alias: string, routeLink: string): BreadcrumbDefinition {\n    return this.dynamicBreadcrumbStore.find((item) => {\n      return (\n        (alias && alias === item.alias) ||\n        (routeLink && routeLink === item.routeLink) ||\n        this.matchRegex(routeLink, item.routeRegex)\n      );\n    });\n  }\n\n  /**\n   * use exact match instead of regexp.test\n   * for /mentor/[^/]+ we should match '/mentor/12' but not '/mentor/12/abc'\n   */\n  private matchRegex(routeLink: string, routeRegex: string) {\n    const match = routeLink.match(new RegExp(routeRegex));\n    return match && match[0] === routeLink;\n  }\n\n  /**\n   * if the path segment has route params, read the param value from url\n   * for each segment of route this gets called\n   *\n   * for mentor/:id/view - it gets called with mentor, :id, view 3 times\n   */\n  private resolvePathSegment(segment: string, activatedRoute: ActivatedRoute) {\n    //quirk -segment can be defined as view/:id in route config in which case you need to make it view/<resolved-param>\n    if (segment.includes(PATH_PARAM.PREFIX)) {\n      Object.entries(activatedRoute.snapshot.params).forEach(([key, value]) => {\n        segment = segment.replace(`:${key}`, `${value}`);\n      });\n    }\n    return segment;\n  }\n\n  /**\n   * queryParams & fragments for previous breadcrumb path are copied over to new list\n   */\n  private getQueryParamsFromPreviousList(routeLink: string): Breadcrumb {\n    const { queryParams, fragment } =\n      this.previousBreadcrumbs.find((item) => item.routeLink === routeLink) ||\n      {};\n    return { queryParams, fragment };\n  }\n\n  /**\n   * set current activated route query params to the last breadcrumb item\n   */\n  private setQueryParamsForActiveBreadcrumb(\n    lastItem: Breadcrumb,\n    activatedRoute: ActivatedRoute\n  ) {\n    if (lastItem) {\n      const { queryParams, fragment } = activatedRoute.snapshot;\n      lastItem.queryParams = queryParams ? { ...queryParams } : undefined;\n      lastItem.fragment = fragment;\n    }\n  }\n\n  /**\n   * For a specific route, breadcrumb can be defined either on parent OR it's child(which has empty path)\n   * When both are defined, child takes precedence\n   *\n   * Ex: Below we are setting breadcrumb on both parent and child.\n   * So, child takes precedence and \"Defined On Child\" is displayed for the route 'home'\n   * { path: 'home', loadChildren: './home/home.module#HomeModule' , data: {breadcrumb: \"Defined On Module\"}}\n   *                                                AND\n   * children: [\n   *   { path: '', component: ShowUserComponent, data: {breadcrumb: \"Defined On Child\" }\n   * ]\n   */\n  private parseRouteData(routeConfig) {\n    const { path, data } = routeConfig;\n    const breadcrumb = this.mergeWithBaseChildData(\n      routeConfig,\n      data?.breadcrumb\n    );\n\n    return { path, breadcrumb };\n  }\n\n  /**\n   * get empty children of a module or Component. Empty child is the one with path: ''\n   * When parent and it's children (that has empty route path) define data merge them both with child taking precedence\n   */\n  private mergeWithBaseChildData(\n    routeConfig,\n    config: BreadcrumbConfig\n  ): BreadcrumbObject {\n    if (!routeConfig) {\n      return this.extractObject(config);\n    }\n\n    let baseChild;\n    if (routeConfig.loadChildren) {\n      // To handle a module with empty child route\n      baseChild = routeConfig._loadedConfig.routes.find(\n        (route) => route.path === ''\n      );\n    } else if (routeConfig.children) {\n      // To handle a component with empty child route\n      baseChild = routeConfig.children.find((route) => route.path === '');\n    }\n\n    const childConfig = baseChild?.data?.breadcrumb;\n    return childConfig\n      ? this.mergeWithBaseChildData(baseChild, {\n          ...this.extractObject(config),\n          ...this.extractObject(childConfig),\n        })\n      : this.extractObject(config);\n  }\n\n  /**\n   * Update breadcrumb dynamically\n   *\n   * key can be a path | alias\n   *\n   * 1) Using complete route path. route can be passed the same way you define angular routes\n   * - path can be passed as 'exact path(routeLink)' or 'path with params(routeRegex)'\n   * - update label Ex: set('/mentor', 'Mentor'), set('/mentor/:id', 'Mentor Details')\n   * - change visibility Ex: set('/mentor/:id/edit', { skip: true })\n   * ------------------------------------------ OR ------------------------------------------\n   * 2) Using route alias (prefixed with '@'). alias should be unique for a route\n   * - update label Ex: set('@mentor', 'Enabler')\n   * - change visibility Ex: set('@mentorEdit', { skip: true })\n   *\n   *\n   * value can be string | BreadcrumbObject | BreadcrumbFunction\n   */\n  set(key: string, breadcrumb: string | BreadcrumbObject) {\n    const breadcrumbObject = this.extractObject(breadcrumb);\n    let updateArgs: [StoreMatcherKey, BreadcrumbDefinition];\n\n    if (key.startsWith(ALIAS_PREFIX)) {\n      updateArgs = ['alias', { ...breadcrumbObject, alias: key.slice(1) }];\n    } else if (key.includes(PATH_PARAM.PREFIX)) {\n      updateArgs = [\n        'routeRegex',\n        { ...breadcrumbObject, routeRegex: this.buildRegex(key) },\n      ];\n    } else {\n      updateArgs = [\n        'routeLink',\n        { ...breadcrumbObject, routeLink: this.ensureLeadingSlash(key) },\n      ];\n    }\n    this.updateStore(...updateArgs);\n    this.updateCurrentBreadcrumbs(...updateArgs);\n  }\n\n  /**\n   * Update the store to reuse for dynamic declarations\n   * If the store already has this route definition update it, else add\n   */\n  private updateStore(key: string, breadcrumb: BreadcrumbDefinition) {\n    const storeItemIndex = this.dynamicBreadcrumbStore.findIndex((item) => {\n      return breadcrumb[key] === item[key];\n    });\n    if (storeItemIndex > -1) {\n      this.dynamicBreadcrumbStore[storeItemIndex] = {\n        ...this.dynamicBreadcrumbStore[storeItemIndex],\n        ...breadcrumb,\n      };\n    } else {\n      this.dynamicBreadcrumbStore.push({ ...breadcrumb });\n    }\n  }\n\n  /**\n   * If breadcrumb is present in current breadcrumbs update it and emit new stream\n   */\n  private updateCurrentBreadcrumbs(\n    key: string,\n    breadcrumb: BreadcrumbDefinition\n  ) {\n    const itemIndex = this.currentBreadcrumbs.findIndex((item) => {\n      return key === 'routeRegex'\n        ? this.matchRegex(item.routeLink, breadcrumb[key])\n        : breadcrumb[key] === item[key];\n    });\n    if (itemIndex > -1) {\n      this.currentBreadcrumbs[itemIndex] = {\n        ...this.currentBreadcrumbs[itemIndex],\n        ...breadcrumb,\n      };\n      const breadcrumbsToShow = this.currentBreadcrumbs.filter(\n        (item) => !item.skip\n      );\n      this.breadcrumbs.next([...breadcrumbsToShow]);\n    }\n  }\n\n  /**\n   * For a route with path param, we create regex dynamically from angular route syntax\n   * '/mentor/:id' becomes '/mentor/[^/]',\n   * breadcrumbService.set('/mentor/:id', 'Uday') should update 'Uday' as label for '/mentor/2' OR 'mentor/ada'\n   */\n  private buildRegex(path: string) {\n    return this.ensureLeadingSlash(path).replace(\n      new RegExp(PATH_PARAM.REGEX_IDENTIFIER, 'g'),\n      PATH_PARAM.REGEX_REPLACER\n    );\n  }\n\n  private ensureLeadingSlash(path: string) {\n    return path.startsWith('/') ? path : `/${path}`;\n  }\n\n  /**\n   * In App's RouteConfig, breadcrumb can be defined as a string OR a function OR an object\n   *\n   * string: simple static breadcrumb label for a path\n   * function: callback that gets invoked with resolved path param\n   * object: additional data defined along with breadcrumb label that gets passed to *xngBreadcrumbItem directive\n   */\n  private extractLabel(config: BreadcrumbConfig, resolvedParam?: string) {\n    const label = typeof config === 'object' ? config.label : config;\n    if (typeof label === 'function') {\n      return label(resolvedParam);\n    }\n    return label;\n  }\n\n  private extractObject(config: BreadcrumbConfig): BreadcrumbObject {\n    // don't include {label} if config is undefined. This is important since we merge the configs\n    if (\n      config &&\n      (typeof config === 'string' || typeof config === 'function')\n    ) {\n      return { label: config };\n    }\n    return (config as BreadcrumbObject) || {};\n  }\n}\n","import {\n  Component,\n  ContentChild,\n  Input,\n  OnInit,\n  TemplateRef,\n  ViewEncapsulation,\n  OnDestroy,\n} from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Observable, Subscription } from 'rxjs';\nimport { BreadcrumbItemDirective } from './breadcrumb-item.directive';\nimport { BreadcrumbService, BreadcrumbDefinition } from './breadcrumb.service';\n\n@Component({\n  selector: 'xng-breadcrumb',\n  templateUrl: './breadcrumb.component.html',\n  styleUrls: ['./breadcrumb.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n})\nexport class BreadcrumbComponent implements OnInit, OnDestroy {\n  subscription: Subscription;\n  breadcrumbs: BreadcrumbDefinition[];\n  breadcrumbs$: Observable<BreadcrumbDefinition[]>;\n  separatorTemplate: TemplateRef<void>;\n  private _separator = '/';\n\n  /**\n   * Breadcrumb item can be customized with this template\n   * Template context is provided label, additional info, first and last indexes\n   * Use cases:\n   * 1) Add an icon along with label\n   * 2) i18n. {{breadcrumb | translate}} or {{breadcrumb | transloco}}\n   * 3) Change text case {{breadcrumb | titlecase}}\n   */\n  @ContentChild(BreadcrumbItemDirective, { static: false, read: TemplateRef })\n  itemTemplate;\n\n  /**\n   * If true, breadcrumb is auto generated even without any mapping label\n   * Default label is same as route segment\n   */\n  @Input() autoGenerate = true;\n\n  /**\n   * By default query params will be preserved with breadcrumbs\n   */\n  @Input() preserveQueryParams = true;\n\n  /**\n   * By default query fragments will be preserved with breadcrumbs\n   */\n  @Input() preserveFragment = true;\n\n  /**\n   * custom class provided by consumer to increase specificity\n   * This will benefit to override styles that are conflicting\n   */\n  @Input() class = '';\n\n  /**\n   * separator between breadcrumbs, defaults to '/'.\n   * User can customize separator either by passing a String or Template\n   *\n   * String --> Ex: <xng-breadcrumb separator=\"-\"> </xng-breadcrumb>\n   *\n   * Template --> Ex: <xng-breadcrumb [separator]=\"separatorTemplate\"> </xng-breadcrumb>\n   * <ng-template #separatorTemplate><mat-icon>arrow_right</mat-icon></ng-template>\n   */\n  @Input('separator')\n  set separator(value: string | TemplateRef<void>) {\n    if (value instanceof TemplateRef) {\n      this.separatorTemplate = value;\n      this._separator = undefined;\n    } else {\n      this.separatorTemplate = undefined;\n      this._separator = value || '/';\n    }\n  }\n  get separator() {\n    return this._separator;\n  }\n\n  constructor(\n    private breadcrumbService: BreadcrumbService,\n    private router: Router\n  ) {}\n\n  ngOnInit() {\n    this.subscription = this.breadcrumbService.breadcrumbs$.subscribe(\n      (breadcrumbs) => {\n        this.breadcrumbs = breadcrumbs\n          .map((breadcrumb) => {\n            // Do not mutate breadcrumb as its source of truth.\n            // There can be scenarios where we can have multiple xng-breadcrumb instances in page\n            return {\n              ...breadcrumb,\n              queryParams: this.preserveQueryParams\n                ? breadcrumb.queryParams\n                : undefined,\n              fragment: this.preserveFragment ? breadcrumb.fragment : undefined,\n            };\n          })\n          .filter((breadcrumb) => {\n            // Usually, breadcrumb list can contain a combination of auto generated and user specified labels\n            // this filters autogenerated labels in case of \"[autoGenerate]: false\"\n            if (this.autoGenerate) {\n              return true;\n            }\n            return !breadcrumb.isAutoGeneratedLabel;\n          });\n      }\n    );\n  }\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  handleRoute(breadcrumb: BreadcrumbDefinition) {\n    const routeLink = breadcrumb.routeInterceptor\n      ? breadcrumb.routeInterceptor(breadcrumb.routeLink, breadcrumb)\n      : breadcrumb.routeLink;\n    const { queryParams, fragment } = breadcrumb;\n    this.router.navigate([routeLink], { queryParams, fragment });\n  }\n}\n","import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { BreadcrumbItemDirective } from './breadcrumb-item.directive';\nimport { BreadcrumbComponent } from './breadcrumb.component';\n\n@NgModule({\n  declarations: [BreadcrumbComponent, BreadcrumbItemDirective],\n  imports: [CommonModule, RouterModule],\n  exports: [BreadcrumbComponent, BreadcrumbItemDirective],\n})\nexport class BreadcrumbModule {}\n"]}