{"version":3,"file":"ngx-gallery-9.js","sources":["ng://ngx-gallery-9/lib/ngx-gallery-helper.service.ts","ng://ngx-gallery-9/lib/ngx-gallery-animation.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-image-size.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-layout.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-order.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-action.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-options.ts","ng://ngx-gallery-9/lib/ngx-gallery-ordered-image.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-preview/ngx-gallery-preview.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-image/ngx-gallery-image.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-thumbnails/ngx-gallery-thumbnails.component.ts","ng://ngx-gallery-9/lib/ngx-gallery.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-action/ngx-gallery-action.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-arrows/ngx-gallery-arrows.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-bullets/ngx-gallery-bullets.component.ts","ng://ngx-gallery-9/lib/ngx-gallery.module.ts","ng://ngx-gallery-9/lib/ngx-gallery-image.model.ts","ng://ngx-gallery-9/public-api.ts","ng://ngx-gallery-9/ngx-gallery-9.ts"],"sourcesContent":["import { Injectable, Renderer2, ElementRef } from '@angular/core';\n\n@Injectable()\nexport class NgxGalleryHelperService {\n  private swipeHandlers: Map<string, Function[]> = new Map<string, Function[]>();\n\n  constructor(private renderer: Renderer2) {}\n\n  manageSwipe(status: boolean, element: ElementRef, id: string, nextHandler: Function, prevHandler: Function): void {\n\n      const handlers = this.getSwipeHandlers(id);\n\n      // swipeleft and swiperight are available only if hammerjs is included\n      try {\n          if (status && !handlers) {\n              this.swipeHandlers.set(id, [\n                  this.renderer.listen(element.nativeElement, 'swipeleft', () => nextHandler()),\n                  this.renderer.listen(element.nativeElement, 'swiperight', () => prevHandler())\n              ]);\n          } else if (!status && handlers) {\n              handlers.map((handler) => handler());\n              this.removeSwipeHandlers(id);\n          }\n      } catch (e) {}\n  }\n\n  validateUrl(url: string): string {\n      if (url.replace) {\n          return url.replace(new RegExp(' ', 'g'), '%20')\n              .replace(new RegExp('\\'', 'g'), '%27');\n      } else {\n          return url;\n      }\n  }\n\n  getBackgroundUrl(image: string) {\n      return 'url(\\'' + this.validateUrl(image) + '\\')';\n  }\n\n  private getSwipeHandlers(id: string): Function[] | undefined {\n      return this.swipeHandlers.get(id);\n  }\n\n  private removeSwipeHandlers(id: string): void {\n      this.swipeHandlers.delete(id);\n  }\n}\n","export class NgxGalleryAnimation {\r\n    static Fade = 'fade';\r\n    static Slide = 'slide';\r\n    static Rotate = 'rotate';\r\n    static Zoom = 'zoom';\r\n}\r\n","export class NgxGalleryImageSize {\r\n    static Cover = 'cover';\r\n    static Contain = 'contain';\r\n}\r\n","export class NgxGalleryLayout {\r\n    static ThumbnailsTop = 'thumbnails-top';\r\n    static ThumbnailsBottom = 'thumbnails-bottom';\r\n}\r\n","export class NgxGalleryOrder {\r\n    static Column = 1;\r\n    static Row = 2;\r\n    static Page = 3;\r\n}\r\n","export interface INgxGalleryAction {\r\n    icon: string;\r\n    disabled?: boolean;\r\n    titleText?: string;\r\n\r\n    onClick: (event: Event, index: number) => void;\r\n}\r\n\r\nexport class NgxGalleryAction implements INgxGalleryAction {\r\n    icon: string;\r\n    disabled?: boolean;\r\n    titleText?: string;\r\n\r\n    onClick: (event: Event, index: number) => void;\r\n\r\n    constructor(action: INgxGalleryAction) {\r\n        this.icon = action.icon;\r\n        this.disabled = action.disabled ? action.disabled : false;\r\n        this.titleText = action.titleText ? action.titleText : '';\r\n\r\n        this.onClick = action.onClick;\r\n    }\r\n}\r\n","import { NgxGalleryAnimation } from './ngx-gallery-animation.model';\r\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\r\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\r\nimport { NgxGalleryOrder } from './ngx-gallery-order.model';\r\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\r\n\r\nexport interface INgxGalleryOptions {\r\n    width?: string;\r\n    height?: string;\r\n    breakpoint?: number;\r\n    fullWidth?: boolean;\r\n    layout?: string;\r\n    startIndex?: number;\r\n    linkTarget?: string;\r\n    lazyLoading?: boolean;\r\n    image?: boolean;\r\n    imagePercent?: number;\r\n    imageArrows?: boolean;\r\n    imageArrowsAutoHide?: boolean;\r\n    imageSwipe?: boolean;\r\n    imageAnimation?: string;\r\n    imageSize?: string;\r\n    imageAutoPlay?: boolean;\r\n    imageAutoPlayInterval?: number;\r\n    imageAutoPlayPauseOnHover?: boolean;\r\n    imageInfinityMove?: boolean;\r\n    imageActions?: NgxGalleryAction[];\r\n    imageDescription?: boolean;\r\n    imageBullets?: boolean;\r\n    thumbnails?: boolean;\r\n    thumbnailsColumns?: number;\r\n    thumbnailsRows?: number;\r\n    thumbnailsPercent?: number;\r\n    thumbnailsMargin?: number;\r\n    thumbnailsArrows?: boolean;\r\n    thumbnailsArrowsAutoHide?: boolean;\r\n    thumbnailsSwipe?: boolean;\r\n    thumbnailsMoveSize?: number;\r\n    thumbnailsOrder?: NgxGalleryOrder;\r\n    thumbnailsRemainingCount?: boolean;\r\n    thumbnailsAsLinks?: boolean;\r\n    thumbnailsAutoHide?: boolean;\r\n    thumbnailMargin?: number;\r\n    thumbnailSize?: string;\r\n    thumbnailActions?: NgxGalleryAction[];\r\n    preview?: boolean;\r\n    previewDescription?: boolean;\r\n    previewArrows?: boolean;\r\n    previewArrowsAutoHide?: boolean;\r\n    previewSwipe?: boolean;\r\n    previewFullscreen?: boolean;\r\n    previewForceFullscreen?: boolean;\r\n    previewCloseOnClick?: boolean;\r\n    previewCloseOnEsc?: boolean;\r\n    previewKeyboardNavigation?: boolean;\r\n    previewAnimation?: boolean;\r\n    previewAutoPlay?: boolean;\r\n    previewAutoPlayInterval?: number;\r\n    previewAutoPlayPauseOnHover?: boolean;\r\n    previewInfinityMove?: boolean;\r\n    previewZoom?: boolean;\r\n    previewZoomStep?: number;\r\n    previewZoomMax?: number;\r\n    previewZoomMin?: number;\r\n    previewRotate?: boolean;\r\n    previewDownload?: boolean;\r\n    previewCustom?: (index: number) => void;\r\n    previewBullets?: boolean;\r\n    arrowPrevIcon?: string;\r\n    arrowNextIcon?: string;\r\n    closeIcon?: string;\r\n    fullscreenIcon?: string;\r\n    spinnerIcon?: string;\r\n    zoomInIcon?: string;\r\n    zoomOutIcon?: string;\r\n    rotateLeftIcon?: string;\r\n    rotateRightIcon?: string;\r\n    downloadIcon?: string;\r\n    actions?: NgxGalleryAction[];\r\n}\r\n\r\nexport class NgxGalleryOptions implements INgxGalleryOptions {\r\n    width?: string;\r\n    height?: string;\r\n    breakpoint?: number;\r\n    fullWidth?: boolean;\r\n    layout?: string;\r\n    startIndex?: number;\r\n    linkTarget?: string;\r\n    lazyLoading?: boolean;\r\n    image?: boolean;\r\n    imagePercent?: number;\r\n    imageArrows?: boolean;\r\n    imageArrowsAutoHide?: boolean;\r\n    imageSwipe?: boolean;\r\n    imageAnimation?: string;\r\n    imageSize?: string;\r\n    imageAutoPlay?: boolean;\r\n    imageAutoPlayInterval?: number;\r\n    imageAutoPlayPauseOnHover?: boolean;\r\n    imageInfinityMove?: boolean;\r\n    imageActions?: NgxGalleryAction[];\r\n    imageDescription?: boolean;\r\n    imageBullets?: boolean;\r\n    thumbnails?: boolean;\r\n    thumbnailsColumns?: number;\r\n    thumbnailsRows?: number;\r\n    thumbnailsPercent?: number;\r\n    thumbnailsMargin?: number;\r\n    thumbnailsArrows?: boolean;\r\n    thumbnailsArrowsAutoHide?: boolean;\r\n    thumbnailsSwipe?: boolean;\r\n    thumbnailsMoveSize?: number;\r\n    thumbnailsOrder?: NgxGalleryOrder;\r\n    thumbnailsRemainingCount?: boolean;\r\n    thumbnailsAsLinks?: boolean;\r\n    thumbnailsAutoHide?: boolean;\r\n    thumbnailMargin?: number;\r\n    thumbnailSize?: string;\r\n    thumbnailActions?: NgxGalleryAction[];\r\n    preview?: boolean;\r\n    previewDescription?: boolean;\r\n    previewArrows?: boolean;\r\n    previewArrowsAutoHide?: boolean;\r\n    previewSwipe?: boolean;\r\n    previewFullscreen?: boolean;\r\n    previewForceFullscreen?: boolean;\r\n    previewCloseOnClick?: boolean;\r\n    previewCloseOnEsc?: boolean;\r\n    previewKeyboardNavigation?: boolean;\r\n    previewAnimation?: boolean;\r\n    previewAutoPlay?: boolean;\r\n    previewAutoPlayInterval?: number;\r\n    previewAutoPlayPauseOnHover?: boolean;\r\n    previewInfinityMove?: boolean;\r\n    previewZoom?: boolean;\r\n    previewZoomStep?: number;\r\n    previewZoomMax?: number;\r\n    previewZoomMin?: number;\r\n    previewRotate?: boolean;\r\n    previewDownload?: boolean;\r\n    previewCustom?: (index: number) => void;\r\n    previewBullets?: boolean;\r\n    arrowPrevIcon?: string;\r\n    arrowNextIcon?: string;\r\n    closeIcon?: string;\r\n    fullscreenIcon?: string;\r\n    spinnerIcon?: string;\r\n    zoomInIcon?: string;\r\n    zoomOutIcon?: string;\r\n    rotateLeftIcon?: string;\r\n    rotateRightIcon?: string;\r\n    downloadIcon?: string;\r\n    actions?: NgxGalleryAction[];\r\n\r\n    constructor(obj: INgxGalleryOptions) {\r\n\r\n        const preventDefaults = obj.breakpoint === undefined ? false : true;\r\n\r\n        function use<T>(source: T, defaultValue: T): T {\r\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\r\n        }\r\n\r\n        this.breakpoint = use(obj.breakpoint, undefined);\r\n        this.width = use(obj.width, '500px');\r\n        this.height = use(obj.height, '400px');\r\n        this.fullWidth = use(obj.fullWidth, false);\r\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\r\n        this.startIndex = use(obj.startIndex, 0);\r\n        this.linkTarget = use(obj.linkTarget, '_blank');\r\n        this.lazyLoading = use(obj.lazyLoading, true);\r\n\r\n        this.image = use(obj.image, true);\r\n        this.imagePercent = use(obj.imagePercent, 75);\r\n        this.imageArrows = use(obj.imageArrows, true);\r\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\r\n        this.imageSwipe = use(obj.imageSwipe, false);\r\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\r\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\r\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\r\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\r\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\r\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\r\n        if (obj && obj.imageActions && obj.imageActions.length) {\r\n            obj.imageActions = obj.imageActions.map(action => new NgxGalleryAction(action));\r\n        }\r\n        this.imageActions = use(obj.imageActions, []);\r\n        this.imageDescription = use(obj.imageDescription, false);\r\n        this.imageBullets = use(obj.imageBullets, false);\r\n\r\n        this.thumbnails = use(obj.thumbnails, true);\r\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\r\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\r\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\r\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\r\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\r\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\r\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\r\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\r\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\r\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\r\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\r\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\r\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\r\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\r\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\r\n            obj.thumbnailActions = obj.thumbnailActions.map(action => new NgxGalleryAction(action));\r\n        }\r\n        this.thumbnailActions = use(obj.thumbnailActions, []);\r\n\r\n        this.preview = use(obj.preview, true);\r\n        this.previewDescription = use(obj.previewDescription, true);\r\n        this.previewArrows = use(obj.previewArrows, true);\r\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\r\n        this.previewSwipe = use(obj.previewSwipe, false);\r\n        this.previewFullscreen = use(obj.previewFullscreen, false);\r\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\r\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\r\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\r\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\r\n        this.previewAnimation = use(obj.previewAnimation, true);\r\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\r\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\r\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\r\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\r\n        this.previewZoom = use(obj.previewZoom, false);\r\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\r\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\r\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\r\n        this.previewRotate = use(obj.previewRotate, false);\r\n        this.previewDownload = use(obj.previewDownload, false);\r\n        this.previewCustom = use(obj.previewCustom, undefined);\r\n        this.previewBullets = use(obj.previewBullets, false);\r\n\r\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\r\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\r\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\r\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\r\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\r\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\r\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\r\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\r\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\r\n        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\r\n\r\n        if (obj && obj.actions && obj.actions.length) {\r\n            obj.actions = obj.actions.map(action => new NgxGalleryAction(action));\r\n        }\r\n        this.actions = use(obj.actions, []);\r\n    }\r\n}\r\n","import { SafeResourceUrl } from '@angular/platform-browser';\r\n\r\nexport interface INgxGalleryOrderedImage {\r\n    src: string | SafeResourceUrl;\r\n    index: number;\r\n}\r\n\r\nexport class NgxGalleryOrderedImage implements INgxGalleryOrderedImage {\r\n    src: string | SafeResourceUrl;\r\n    index: number;\r\n\r\n    constructor(obj: INgxGalleryOrderedImage) {\r\n        this.src = obj.src;\r\n        this.index = obj.index;\r\n    }\r\n}\r\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, SimpleChanges, HostListener, Renderer2 } from '@angular/core';\nimport { SafeResourceUrl, SafeUrl, DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\n\n@Component({\n  selector: 'ngx-gallery-preview',\n  templateUrl: './ngx-gallery-preview.component.html',\n  styleUrls: ['./ngx-gallery-preview.component.scss']\n})\nexport class NgxGalleryPreviewComponent implements OnInit, OnChanges {\n\n  src: SafeUrl;\n  srcIndex: number;\n  description: string;\n  showSpinner = false;\n  positionLeft = 0;\n  positionTop = 0;\n  zoomValue = 1;\n  loading = false;\n  rotateValue = 0;\n  index = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() fullscreen: boolean;\n  @Input() forceFullscreen: boolean;\n  @Input() closeOnClick: boolean;\n  @Input() closeOnEsc: boolean;\n  @Input() keyboardNavigation: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() closeIcon: string;\n  @Input() fullscreenIcon: string;\n  @Input() spinnerIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() zoom: boolean;\n  @Input() zoomStep: number;\n  @Input() zoomMax: number;\n  @Input() zoomMin: number;\n  @Input() zoomInIcon: string;\n  @Input() zoomOutIcon: string;\n  @Input() animation: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() rotate: boolean;\n  @Input() rotateLeftIcon: string;\n  @Input() rotateRightIcon: string;\n  @Input() download: boolean;\n  @Input() downloadIcon: string;\n  @Input() bullets: string;\n\n  @Output() onOpen = new EventEmitter();\n  @Output() onClose = new EventEmitter();\n  @Output() onActiveChange = new EventEmitter<number>();\n\n  @ViewChild('previewImage') previewImage: ElementRef;\n\n  private isOpen = false;\n  private timer;\n  private initialX = 0;\n  private initialY = 0;\n  private initialLeft = 0;\n  private initialTop = 0;\n  private isMove = false;\n\n  private keyDownListener: Function;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n      private helperService: NgxGalleryHelperService, private renderer: Renderer2,\n      private changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n      if (this.arrows && this.arrowsAutoHide) {\n          this.arrows = false;\n      }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef,\n          'preview', () => this.showNext(), () => this.showPrev());\n      }\n  }\n\n  ngOnDestroy() {\n      if (this.keyDownListener) {\n          this.keyDownListener();\n      }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      if (this.arrowsAutoHide && !this.arrows) {\n          this.arrows = true;\n      }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      if (this.arrowsAutoHide && this.arrows) {\n          this.arrows = false;\n      }\n  }\n\n  onKeyDown(e) {\n      if (this.isOpen) {\n          if (this.keyboardNavigation) {\n              if (this.isKeyboardPrev(e)) {\n                  this.showPrev();\n              } else if (this.isKeyboardNext(e)) {\n                  this.showNext();\n              }\n          }\n          if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n              this.close();\n          }\n      }\n  }\n\n  open(index: number): void {\n      this.onOpen.emit();\n\n      this.index = index;\n      this.isOpen = true;\n      this.show(true);\n\n      if (this.forceFullscreen) {\n          this.manageFullscreen();\n      }\n\n      this.keyDownListener = this.renderer.listen(\"window\", \"keydown\", (e) => this.onKeyDown(e));\n  }\n\n  close(): void {\n      this.isOpen = false;\n      this.closeFullscreen();\n      this.onClose.emit();\n\n      this.stopAutoPlay();\n\n      if (this.keyDownListener) {\n          this.keyDownListener();\n      }\n  }\n\n  imageMouseEnter(): void {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.stopAutoPlay();\n      }\n  }\n\n  imageMouseLeave(): void {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.startAutoPlay();\n      }\n  }\n\n  startAutoPlay(): void {\n      if (this.autoPlay) {\n          this.stopAutoPlay();\n\n          this.timer = setTimeout(() => {\n              if (!this.showNext()) {\n                  this.index = -1;\n                  this.showNext();\n              }\n          }, this.autoPlayInterval);\n      }\n  }\n\n  stopAutoPlay(): void {\n      if (this.timer) {\n          clearTimeout(this.timer);\n      }\n  }\n\n  showAtIndex(index: number): void {\n      this.index = index;\n      this.show();\n  }\n\n  showNext(): boolean {\n      if (this.canShowNext()) {\n          this.index++;\n\n          if (this.index === this.images.length) {\n              this.index = 0;\n          }\n\n          this.show();\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  showPrev(): void {\n      if (this.canShowPrev()) {\n          this.index--;\n\n          if (this.index < 0) {\n              this.index = this.images.length - 1;\n          }\n\n          this.show();\n      }\n  }\n\n  canShowNext(): boolean {\n      if (this.loading) {\n          return false;\n      } else if (this.images) {\n          return this.infinityMove || this.index < this.images.length - 1 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.loading) {\n          return false;\n      } else if (this.images) {\n          return this.infinityMove || this.index > 0 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  manageFullscreen(): void {\n      if (this.fullscreen || this.forceFullscreen) {\n          const doc = <any>document;\n\n          if (!doc.fullscreenElement && !doc.mozFullScreenElement\n              && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n              this.openFullscreen();\n          } else {\n              this.closeFullscreen();\n          }\n      }\n  }\n\n  getSafeUrl(image: string): SafeUrl {\n      return image.substr(0, 10) === 'data:image' ?\n          image : this.sanitization.bypassSecurityTrustUrl(image);\n  }\n\n  zoomIn(): void {\n      if (this.canZoomIn()) {\n          this.zoomValue += this.zoomStep;\n\n          if (this.zoomValue > this.zoomMax) {\n              this.zoomValue = this.zoomMax;\n          }\n      }\n  }\n\n  zoomOut(): void {\n      if (this.canZoomOut()) {\n          this.zoomValue -= this.zoomStep;\n\n          if (this.zoomValue < this.zoomMin) {\n              this.zoomValue = this.zoomMin;\n          }\n\n          if (this.zoomValue <= 1) {\n              this.resetPosition()\n          }\n      }\n  }\n\n  rotateLeft(): void {\n      this.rotateValue -= 90;\n  }\n\n  rotateRight(): void {\n      this.rotateValue += 90;\n  }\n\n  getTransform(): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\n  }\n\n  canZoomIn(): boolean {\n      return this.zoomValue < this.zoomMax ? true : false;\n  }\n\n  canZoomOut(): boolean {\n      return this.zoomValue > this.zoomMin ? true : false;\n  }\n\n  canDragOnZoom() {\n      return this.zoom && this.zoomValue > 1;\n  }\n\n  mouseDownHandler(e): void {\n      if (this.canDragOnZoom()) {\n          this.initialX = this.getClientX(e);\n          this.initialY = this.getClientY(e);\n          this.initialLeft = this.positionLeft;\n          this.initialTop = this.positionTop;\n          this.isMove = true;\n\n          e.preventDefault();\n      }\n  }\n\n  mouseUpHandler(e): void {\n      this.isMove = false;\n  }\n\n  mouseMoveHandler(e) {\n      if (this.isMove) {\n          this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n          this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n      }\n  }\n\n  private getClientX(e): number {\n      return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n  }\n\n  private getClientY(e): number {\n      return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n  }\n\n  private resetPosition() {\n      if (this.zoom) {\n          this.positionLeft = 0;\n          this.positionTop = 0;\n      }\n  }\n\n  private isKeyboardNext(e): boolean {\n      return e.keyCode === 39 ? true : false;\n  }\n\n  private isKeyboardPrev(e): boolean {\n      return e.keyCode === 37 ? true : false;\n  }\n\n  private isKeyboardEsc(e): boolean {\n      return e.keyCode === 27 ? true : false;\n  }\n\n  private openFullscreen(): void {\n      const element = <any>document.documentElement;\n\n      if (element.requestFullscreen) {\n          element.requestFullscreen();\n      } else if (element.msRequestFullscreen) {\n          element.msRequestFullscreen();\n      } else if (element.mozRequestFullScreen) {\n          element.mozRequestFullScreen();\n      } else if (element.webkitRequestFullscreen) {\n          element.webkitRequestFullscreen();\n      }\n  }\n\n  private closeFullscreen(): void {\n      if (this.isFullscreen()) {\n          const doc = <any>document;\n\n          if (doc.exitFullscreen) {\n              doc.exitFullscreen();\n          } else if (doc.msExitFullscreen) {\n              doc.msExitFullscreen();\n          } else if (doc.mozCancelFullScreen) {\n              doc.mozCancelFullScreen();\n          } else if (doc.webkitExitFullscreen) {\n              doc.webkitExitFullscreen();\n          }\n      }\n  }\n\n  private isFullscreen() {\n      const doc = <any>document;\n\n      return doc.fullscreenElement || doc.webkitFullscreenElement\n          || doc.mozFullScreenElement || doc.msFullscreenElement;\n  }\n\n\n\n  private show(first = false) {\n      this.loading = true;\n      this.stopAutoPlay();\n\n      this.onActiveChange.emit(this.index);\n\n      if (first || !this.animation) {\n          this._show();\n      } else {\n          setTimeout(() => this._show(), 600);\n      }\n  }\n\n  private _show() {\n      this.zoomValue = 1;\n      this.rotateValue = 0;\n      this.resetPosition();\n\n      this.src = this.getSafeUrl(<string>this.images[this.index]);\n      this.srcIndex = this.index;\n      this.description = this.descriptions[this.index];\n      this.changeDetectorRef.markForCheck();\n\n      setTimeout(() => {\n          if (this.isLoaded(this.previewImage.nativeElement)) {\n              this.loading = false;\n              this.startAutoPlay();\n              this.changeDetectorRef.markForCheck();\n          } else {\n              setTimeout(() => {\n                  if (this.loading) {\n                      this.showSpinner = true;\n                      this.changeDetectorRef.markForCheck();\n                  }\n              })\n\n              this.previewImage.nativeElement.onload = () => {\n                  this.loading = false;\n                  this.showSpinner = false;\n                  this.previewImage.nativeElement.onload = null;\n                  this.startAutoPlay();\n                  this.changeDetectorRef.markForCheck();\n              }\n          }\n      })\n  }\n\n  private isLoaded(img): boolean {\n      if (!img.complete) {\n          return false;\n      }\n\n      if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\n          return false;\n      }\n\n      return true;\n  }\n\n}","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, ElementRef, SimpleChanges, HostListener } from '@angular/core';\nimport { NgxGalleryOrderedImage } from '../ngx-gallery-ordered-image.model';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\nimport { NgxGalleryAnimation } from '../ngx-gallery-animation.model';\n\n@Component({\n  selector: 'ngx-gallery-image',\n  templateUrl: './ngx-gallery-image.component.html',\n  styleUrls: ['./ngx-gallery-image.component.scss']\n})\nexport class NgxGalleryImageComponent implements OnInit, OnChanges {\n  @Input() images: NgxGalleryOrderedImage[];\n  @Input() clickable: boolean;\n  @Input() selectedIndex: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() animation: string;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() bullets: boolean;\n\n  @Output() onClick = new EventEmitter();\n  @Output() onActiveChange = new EventEmitter();\n\n  canChangeImage = true;\n\n  private timer;\n\n  constructor(private sanitization: DomSanitizer,\n      private elementRef: ElementRef, private helperService: NgxGalleryHelperService) {}\n\n  ngOnInit(): void {\n      if (this.arrows && this.arrowsAutoHide) {\n          this.arrows = false;\n      }\n\n      if (this.autoPlay) {\n          this.startAutoPlay();\n      }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', () => this.showNext(), () => this.showPrev());\n      }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      if (this.arrowsAutoHide && !this.arrows) {\n          this.arrows = true;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.stopAutoPlay();\n      }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      if (this.arrowsAutoHide && this.arrows) {\n          this.arrows = false;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.startAutoPlay();\n      }\n  }\n\n  reset(index: number): void {\n      this.selectedIndex = index;\n  }\n\n  getImages(): NgxGalleryOrderedImage[] {\n      if (!this.images) {\n          return [];\n      }\n\n      if (this.lazyLoading) {\n          let indexes = [this.selectedIndex];\n          let prevIndex = this.selectedIndex - 1;\n\n          if (prevIndex === -1 && this.infinityMove) {\n              indexes.push(this.images.length - 1)\n          } else if (prevIndex >= 0) {\n              indexes.push(prevIndex);\n          }\n\n          let nextIndex = this.selectedIndex + 1;\n\n          if (nextIndex == this.images.length && this.infinityMove) {\n              indexes.push(0);\n          } else if (nextIndex < this.images.length) {\n              indexes.push(nextIndex);\n          }\n\n          return this.images.filter((img, i) => indexes.indexOf(i) != -1);\n      } else {\n          return this.images;\n      }\n  }\n\n  startAutoPlay(): void {\n      this.stopAutoPlay();\n\n      this.timer = setInterval(() => {\n          if (!this.showNext()) {\n              this.selectedIndex = -1;\n              this.showNext();\n          }\n      }, this.autoPlayInterval);\n  }\n\n  stopAutoPlay() {\n      if (this.timer) {\n          clearInterval(this.timer);\n      }\n  }\n\n  handleClick(event: Event, index: number): void {\n      if (this.clickable) {\n          this.onClick.emit(index);\n\n          event.stopPropagation();\n          event.preventDefault();\n      }\n  }\n\n  show(index: number) {\n      this.selectedIndex = index;\n      this.onActiveChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n  }\n\n  showNext(): boolean {\n      if (this.canShowNext() && this.canChangeImage) {\n          this.selectedIndex++;\n\n          if (this.selectedIndex === this.images.length) {\n              this.selectedIndex = 0;\n          }\n\n          this.onActiveChange.emit(this.selectedIndex);\n          this.setChangeTimeout();\n\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  showPrev(): void {\n      if (this.canShowPrev() && this.canChangeImage) {\n          this.selectedIndex--;\n\n          if (this.selectedIndex < 0) {\n              this.selectedIndex = this.images.length - 1;\n          }\n\n          this.onActiveChange.emit(this.selectedIndex);\n          this.setChangeTimeout();\n      }\n  }\n\n  setChangeTimeout() {\n      this.canChangeImage = false;\n      let timeout = 1000;\n\n      if (this.animation === NgxGalleryAnimation.Slide\n          || this.animation === NgxGalleryAnimation.Fade) {\n              timeout = 500;\n      }\n\n      setTimeout(() => {\n          this.canChangeImage = true;\n      }, timeout);\n  }\n\n  canShowNext(): boolean {\n      if (this.images) {\n          return this.infinityMove || this.selectedIndex < this.images.length - 1\n              ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.images) {\n          return this.infinityMove || this.selectedIndex > 0 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n}\n","import { Component, OnChanges, Input, Output, EventEmitter, ElementRef, SimpleChanges, HostListener } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\nimport { NgxGalleryOrder } from '../ngx-gallery-order.model';\n\n@Component({\n  selector: 'ngx-gallery-thumbnails',\n  templateUrl: './ngx-gallery-thumbnails.component.html',\n  styleUrls: ['./ngx-gallery-thumbnails.component.scss']\n})\nexport class NgxGalleryThumbnailsComponent implements OnChanges {\n\n  thumbnailsLeft: string;\n  thumbnailsMarginLeft: string;\n  mouseenter: boolean;\n  remainingCountValue: number;\n\n  minStopIndex = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() links: string[];\n  @Input() labels: string[];\n  @Input() linkTarget: string;\n  @Input() columns: number;\n  @Input() rows: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() margin: number;\n  @Input() selectedIndex: number;\n  @Input() clickable: boolean;\n  @Input() swipe: boolean;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() moveSize: number;\n  @Input() order: number;\n  @Input() remainingCount: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n\n  @Output() onActiveChange = new EventEmitter();\n\n  private index = 0;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n      private helperService: NgxGalleryHelperService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['selectedIndex']) {\n          this.validateIndex();\n      }\n\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef,\n          'thumbnails', () => this.moveRight(), () => this.moveLeft());\n      }\n\n      if (this.images) {\n          this.remainingCountValue = this.images.length - (this.rows * this.columns);\n      }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      this.mouseenter = true;\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      this.mouseenter = false;\n  }\n\n  reset(index: number): void {\n      this.selectedIndex = index;\n      this.setDefaultPosition();\n\n      this.index = 0;\n      this.validateIndex();\n  }\n\n  getImages(): string[] | SafeResourceUrl[] {\n      if (!this.images) {\n          return [];\n      }\n\n      if (this.remainingCount) {\n          return this.images.slice(0, this.rows * this.columns);\n      } \n      else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {\n          let stopIndex = 0;\n\n          if (this.order === NgxGalleryOrder.Column) {\n              stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\n          }\n          else if (this.order === NgxGalleryOrder.Page) {\n              stopIndex = this.index + ((this.columns * this.rows) * 2);\n          }\n\n          if (stopIndex <= this.minStopIndex) {\n              stopIndex = this.minStopIndex;\n          } else {\n              this.minStopIndex = stopIndex;\n          }\n\n          return this.images.slice(0, stopIndex);\n      } \n      else {\n          return this.images;\n      }\n  }\n\n  handleClick(event: Event, index: number): void {\n      if (!this.hasLink(index)) {\n          this.selectedIndex = index;\n          this.onActiveChange.emit(index);\n\n          event.stopPropagation();\n          event.preventDefault();\n      }\n  }\n\n  hasLink(index: number): boolean {\n      if (this.links && this.links.length && this.links[index]) return true;\n  }\n\n  moveRight(): void {\n      if (this.canMoveRight()) {\n          this.index += this.moveSize;\n          let maxIndex = this.getMaxIndex() - this.columns;\n\n          if (this.index > maxIndex) {\n              this.index = maxIndex;\n          }\n\n          this.setThumbnailsPosition();\n      }\n  }\n\n  moveLeft(): void {\n      if (this.canMoveLeft()) {\n          this.index -= this.moveSize;\n\n          if (this.index < 0) {\n              this.index = 0;\n          }\n\n          this.setThumbnailsPosition();\n      }\n  }\n\n  canMoveRight(): boolean {\n      return this.index + this.columns < this.getMaxIndex() ? true : false;\n  }\n\n  canMoveLeft(): boolean {\n      return this.index !== 0 ? true : false;\n  }\n\n  getThumbnailLeft(index: number): SafeStyle {\n      let calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n          calculatedIndex = Math.floor(index / this.rows);\n      }\n      else if (this.order === NgxGalleryOrder.Page) {\n          calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);\n      }\n      else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n          calculatedIndex = index % this.columns;\n      }\n      else {\n          calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.columns);\n  }\n\n  getThumbnailTop(index: number): SafeStyle {\n      let calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n          calculatedIndex = index % this.rows;\n      }\n      else if (this.order === NgxGalleryOrder.Page) {\n          calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);\n      }\n      else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n          calculatedIndex = Math.floor(index / this.columns);\n      }\n      else {\n          calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.rows);\n  }\n\n  getThumbnailWidth(): SafeStyle {\n      return this.getThumbnailDimension(this.columns);\n  }\n\n  getThumbnailHeight(): SafeStyle {\n      return this.getThumbnailDimension(this.rows);\n  }\n\n  setThumbnailsPosition(): void {\n      this.thumbnailsLeft = - ((100 / this.columns) * this.index) + '%'\n\n      this.thumbnailsMarginLeft = - ((this.margin - (((this.columns - 1)\n      * this.margin) / this.columns)) * this.index) + 'px';\n  }\n\n  setDefaultPosition(): void {\n      this.thumbnailsLeft = '0px';\n      this.thumbnailsMarginLeft = '0px';\n  }\n\n  canShowArrows(): boolean {\n      if (this.remainingCount) {\n          return false;\n      } else if (this.arrows && this.images && this.images.length > this.getVisibleCount()\n          && (!this.arrowsAutoHide || this.mouseenter)) {\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  validateIndex(): void {\n      if (this.images) {\n          let newIndex;\n\n          if (this.order === NgxGalleryOrder.Column) {\n              newIndex = Math.floor(this.selectedIndex / this.rows);\n          } else {\n              newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n          }\n\n          if (this.remainingCount) {\n              newIndex = 0;\n          }\n\n          if (newIndex < this.index || newIndex >= this.index + this.columns) {\n              const maxIndex = this.getMaxIndex() - this.columns;\n              this.index = newIndex > maxIndex ? maxIndex : newIndex;\n\n              this.setThumbnailsPosition();\n          }\n      }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n\n  private getThumbnailPosition(index: number, count: number): SafeStyle {\n      return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\n          + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\n  }\n\n  private getThumbnailDimension(count: number): SafeStyle {\n      if (this.margin !== 0) {\n          return this.getSafeStyle('calc(' + (100 / count) + '% - '\n              + (((count - 1) * this.margin) / count) + 'px)');\n      } else {\n          return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\n      }\n  }\n\n  private getMaxIndex(): number {\n      if (this.order == NgxGalleryOrder.Page) {\n          let maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);\n\n          if (this.images.length % this.getVisibleCount() > this.columns) {\n              maxIndex += this.columns;\n          }\n          else {\n              maxIndex += this.images.length % this.getVisibleCount();\n          }\n\n          return maxIndex;\n      }\n      else {\n          return Math.ceil(this.images.length / this.rows);\n      }\n  }\n\n  private getVisibleCount(): number {\n      return this.columns * this.rows;\n  }\n\n  private getSafeStyle(value: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(value);\n  }\n}\n","import { Component, OnInit, DoCheck, AfterViewInit, EventEmitter, Output, ViewChild, HostBinding, ElementRef, HostListener, Input } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\nimport { NgxGalleryOptions } from './ngx-gallery-options';\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\nimport { NgxGalleryImage } from './ngx-gallery-image.model';\nimport { NgxGalleryOrderedImage } from './ngx-gallery-ordered-image.model';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image/ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\n\n@Component({\n  selector: 'ngx-gallery',\n  template: `\n    <div class=\"ngx-gallery-layout {{currentOptions?.layout}}\">\n      <ngx-gallery-image *ngIf=\"currentOptions?.image\" [style.height]=\"getImageHeight()\" [images]=\"mediumImages\" [clickable]=\"currentOptions?.preview\" [selectedIndex]=\"selectedIndex\" [arrows]=\"currentOptions?.imageArrows\" [arrowsAutoHide]=\"currentOptions?.imageArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [swipe]=\"currentOptions?.imageSwipe\" [animation]=\"currentOptions?.imageAnimation\" [size]=\"currentOptions?.imageSize\" [autoPlay]=\"currentOptions?.imageAutoPlay\" [autoPlayInterval]=\"currentOptions?.imageAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.imageAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.imageInfinityMove\"  [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.imageActions\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.imageDescription\" [bullets]=\"currentOptions?.imageBullets\" (onClick)=\"openPreview($event)\" (onActiveChange)=\"selectFromImage($event)\"></ngx-gallery-image>\n\n      <ngx-gallery-thumbnails *ngIf=\"currentOptions?.thumbnails\" [style.marginTop]=\"getThumbnailsMarginTop()\" [style.marginBottom]=\"getThumbnailsMarginBottom()\" [style.height]=\"getThumbnailsHeight()\" [images]=\"smallImages\" [links]=\"currentOptions?.thumbnailsAsLinks ? links : []\" [labels]=\"labels\" [linkTarget]=\"currentOptions?.linkTarget\" [selectedIndex]=\"selectedIndex\" [columns]=\"currentOptions?.thumbnailsColumns\" [rows]=\"currentOptions?.thumbnailsRows\" [margin]=\"currentOptions?.thumbnailMargin\" [arrows]=\"currentOptions?.thumbnailsArrows\" [arrowsAutoHide]=\"currentOptions?.thumbnailsArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [clickable]=\"currentOptions?.image || currentOptions?.preview\" [swipe]=\"currentOptions?.thumbnailsSwipe\" [size]=\"currentOptions?.thumbnailSize\" [moveSize]=\"currentOptions?.thumbnailsMoveSize\" [order]=\"currentOptions?.thumbnailsOrder\" [remainingCount]=\"currentOptions?.thumbnailsRemainingCount\" [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.thumbnailActions\"  (onActiveChange)=\"selectFromThumbnails($event)\"></ngx-gallery-thumbnails>\n\n      <ngx-gallery-preview [images]=\"bigImages\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.previewDescription\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [closeIcon]=\"currentOptions?.closeIcon\" [fullscreenIcon]=\"currentOptions?.fullscreenIcon\" [spinnerIcon]=\"currentOptions?.spinnerIcon\" [arrows]=\"currentOptions?.previewArrows\" [arrowsAutoHide]=\"currentOptions?.previewArrowsAutoHide\" [swipe]=\"currentOptions?.previewSwipe\" [fullscreen]=\"currentOptions?.previewFullscreen\" [forceFullscreen]=\"currentOptions?.previewForceFullscreen\" [closeOnClick]=\"currentOptions?.previewCloseOnClick\" [closeOnEsc]=\"currentOptions?.previewCloseOnEsc\" [keyboardNavigation]=\"currentOptions?.previewKeyboardNavigation\" [animation]=\"currentOptions?.previewAnimation\" [autoPlay]=\"currentOptions?.previewAutoPlay\" [autoPlayInterval]=\"currentOptions?.previewAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.previewAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.previewInfinityMove\" [zoom]=\"currentOptions?.previewZoom\" [zoomStep]=\"currentOptions?.previewZoomStep\" [zoomMax]=\"currentOptions?.previewZoomMax\" [zoomMin]=\"currentOptions?.previewZoomMin\" [zoomInIcon]=\"currentOptions?.zoomInIcon\" [zoomOutIcon]=\"currentOptions?.zoomOutIcon\" [actions]=\"currentOptions?.actions\" [rotate]=\"currentOptions?.previewRotate\" [rotateLeftIcon]=\"currentOptions?.rotateLeftIcon\" [rotateRightIcon]=\"currentOptions?.rotateRightIcon\" [download]=\"currentOptions?.previewDownload\" [downloadIcon]=\"currentOptions?.downloadIcon\" [bullets]=\"currentOptions?.previewBullets\" (onClose)=\"onPreviewClose()\" (onOpen)=\"onPreviewOpen()\" (onActiveChange)=\"previewSelect($event)\" [class.ngx-gallery-active]=\"previewEnabled\"></ngx-gallery-preview>\n    </div>\n  `,\n  styleUrls: ['./ngx-gallery.component.scss'],\n  providers: [NgxGalleryHelperService]\n})\nexport class NgxGalleryComponent implements OnInit, DoCheck, AfterViewInit {\n  @Input() options: NgxGalleryOptions[];\n  @Input() images: NgxGalleryImage[];\n\n  @Output() imagesReady = new EventEmitter();\n  @Output() change = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n  @Output() previewOpen = new EventEmitter();\n  @Output() previewClose = new EventEmitter();\n  @Output() previewChange = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n\n  smallImages: string[] | SafeResourceUrl[];\n  mediumImages: NgxGalleryOrderedImage[];\n  bigImages: string[] | SafeResourceUrl[];\n  descriptions: string[];\n  links: string[];\n  labels: string[];\n\n  oldImages: NgxGalleryImage[];\n  oldImagesLength = 0;\n\n  selectedIndex = 0;\n  previewEnabled: boolean;\n\n  currentOptions: NgxGalleryOptions;\n\n  private breakpoint: number | undefined = undefined;\n  private prevBreakpoint: number | undefined = undefined;\n  private fullWidthTimeout: any;\n\n  @ViewChild(NgxGalleryPreviewComponent) preview: NgxGalleryPreviewComponent;\n  @ViewChild(NgxGalleryImageComponent) image: NgxGalleryImageComponent;\n  @ViewChild(NgxGalleryThumbnailsComponent) thubmnails: NgxGalleryThumbnailsComponent;\n\n  @HostBinding('style.width') width: string;\n  @HostBinding('style.height') height: string;\n  @HostBinding('style.left') left: string;\n\n  constructor(private myElement: ElementRef) {}\n\n  ngOnInit() {\n      this.options = this.options.map((opt) => new NgxGalleryOptions(opt));\n      this.sortOptions();\n      this.setBreakpoint();\n      this.setOptions();\n      this.checkFullWidth();\n      if (this.currentOptions) {\n          this.selectedIndex = <number>this.currentOptions.startIndex;\n      }\n  }\n\n  ngDoCheck(): void {\n      if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\n          || (this.images !== this.oldImages)) {\n          this.oldImagesLength = this.images.length;\n          this.oldImages = this.images;\n          this.setOptions();\n          this.setImages();\n\n          if (this.images && this.images.length) {\n              this.imagesReady.emit();\n          }\n\n          if (this.image) {\n              this.image.reset(<number>this.currentOptions.startIndex);\n          }\n\n          if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails\n              && this.images.length <= 1) {\n              this.currentOptions.thumbnails = false;\n              this.currentOptions.imageArrows = false;\n          }\n\n          this.resetThumbnails();\n      }\n  }\n\n  ngAfterViewInit(): void {\n      this.checkFullWidth();\n  }\n\n  @HostListener('window:resize') onResize() {\n      this.setBreakpoint();\n\n      if (this.prevBreakpoint !== this.breakpoint) {\n          this.setOptions();\n          this.resetThumbnails();\n      }\n\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n\n          if (this.fullWidthTimeout) {\n              clearTimeout(this.fullWidthTimeout);\n          }\n\n          this.fullWidthTimeout = setTimeout(() => {\n              this.checkFullWidth();\n          }, 200);\n      }\n  }\n\n  getImageHeight(): string {\n      return (this.currentOptions && this.currentOptions.thumbnails) ?\n          this.currentOptions.imagePercent + '%' : '100%';\n  }\n\n  getThumbnailsHeight(): string {\n      if (this.currentOptions && this.currentOptions.image) {\n          return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\n          + this.currentOptions.thumbnailsMargin + 'px)';\n      } else {\n          return '100%';\n      }\n  }\n\n  getThumbnailsMarginTop(): string {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n          return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n          return '0px';\n      }\n  }\n\n  getThumbnailsMarginBottom(): string {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n          return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n          return '0px';\n      }\n  }\n\n  openPreview(index: number): void {\n      if (this.currentOptions.previewCustom) {\n          this.currentOptions.previewCustom(index);\n      } else {\n          this.previewEnabled = true;\n          this.preview.open(index);\n      }\n  }\n\n  onPreviewOpen(): void {\n      this.previewOpen.emit();\n\n      if (this.image && this.image.autoPlay) {\n          this.image.stopAutoPlay();\n      }\n  }\n\n  onPreviewClose(): void {\n      this.previewEnabled = false;\n      this.previewClose.emit();\n\n      if (this.image && this.image.autoPlay) {\n          this.image.startAutoPlay();\n      }\n  }\n\n  selectFromImage(index: number) {\n      this.select(index);\n  }\n\n  selectFromThumbnails(index: number) {\n      this.select(index);\n\n      if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\n          && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\n          this.openPreview(this.selectedIndex);\n      }\n  }\n\n  show(index: number): void {\n      this.select(index);\n  }\n\n  showNext(): void {\n      this.image.showNext();\n  }\n\n  showPrev(): void {\n      this.image.showPrev();\n  }\n\n  canShowNext(): boolean {\n      if (this.images && this.currentOptions) {\n          return (this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1)\n              ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.images && this.currentOptions) {\n          return (this.currentOptions.imageInfinityMove || this.selectedIndex > 0) ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  previewSelect(index: number) {\n      this.previewChange.emit({index, image: this.images[index]});\n  }\n\n  moveThumbnailsRight() {\n      this.thubmnails.moveRight();\n  }\n\n  moveThumbnailsLeft() {\n      this.thubmnails.moveLeft();\n  }\n\n  canMoveThumbnailsRight() {\n      return this.thubmnails.canMoveRight();\n  }\n\n  canMoveThumbnailsLeft() {\n      return this.thubmnails.canMoveLeft();\n  }\n\n  private resetThumbnails() {\n      if (this.thubmnails) {\n          this.thubmnails.reset(<number>this.currentOptions.startIndex);\n      }\n  }\n\n  private select(index: number) {\n      this.selectedIndex = index;\n\n      this.change.emit({\n          index,\n          image: this.images[index]\n      });\n  }\n\n  private checkFullWidth(): void {\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n          this.width = document.body.clientWidth + 'px';\n          this.left = (-(document.body.clientWidth -\n              this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px';\n      }\n  }\n\n  private setImages(): void {\n      this.smallImages = this.images.map((img) => <string>img.small);\n      this.mediumImages = this.images.map((img, i) => new NgxGalleryOrderedImage({\n          src: img.medium,\n          index: i\n      }));\n      this.bigImages = this.images.map((img) => <string>img.big);\n      this.descriptions = this.images.map((img) => <string>img.description);\n      this.links = this.images.map((img) => <string>img.url);\n      this.labels = this.images.map((img) => <string>img.label);\n  }\n\n  private setBreakpoint(): void {\n      this.prevBreakpoint = this.breakpoint;\n      let breakpoints;\n\n      if (typeof window !== 'undefined') {\n          breakpoints = this.options.filter((opt) => opt.breakpoint >= window.innerWidth)\n              .map((opt) => opt.breakpoint);\n      }\n\n      if (breakpoints && breakpoints.length) {\n          this.breakpoint = breakpoints.pop();\n      } else {\n          this.breakpoint = undefined;\n      }\n  }\n\n  private sortOptions(): void {\n      this.options = [\n          ...this.options.filter((a) => a.breakpoint === undefined),\n          ...this.options\n              .filter((a) => a.breakpoint !== undefined)\n              .sort((a, b) => b.breakpoint - a.breakpoint)\n      ];\n  }\n\n  private setOptions(): void {\n      this.currentOptions = new NgxGalleryOptions({});\n\n      this.options\n          .filter((opt) => opt.breakpoint === undefined || opt.breakpoint >= this.breakpoint)\n          .map((opt) => this.combineOptions(this.currentOptions, opt));\n\n      this.width = <string>this.currentOptions.width;\n      this.height = <string>this.currentOptions.height;\n  }\n\n  private combineOptions(first: NgxGalleryOptions, second: NgxGalleryOptions) {\n      Object.keys(second).map((val) => first[val] = second[val] !== undefined ? second[val] : first[val]);\n  }\n}\n","import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-action',\n  templateUrl: './ngx-gallery-action.component.html',\n  styleUrls: ['./ngx-gallery-action.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryActionComponent {\n  @Input() icon: string;\n  @Input() disabled = false;\n  @Input() titleText = '';\n\n  @Output() onClick: EventEmitter<Event> = new EventEmitter();\n\n  handleClick(event: Event) {\n      if (!this.disabled) {\n          this.onClick.emit(event);\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-arrows',\n  templateUrl: './ngx-gallery-arrows.component.html',\n  styleUrls: ['./ngx-gallery-arrows.component.scss']\n})\nexport class NgxGalleryArrowsComponent{\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n\n  @Output() onPrevClick = new EventEmitter();\n  @Output() onNextClick = new EventEmitter();\n\n  handlePrevClick(): void {\n      this.onPrevClick.emit();\n  }\n\n  handleNextClick(): void {\n      this.onNextClick.emit();\n  }\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-bullets',\n  templateUrl: './ngx-gallery-bullets.component.html',\n  styleUrls: ['./ngx-gallery-bullets.component.scss']\n})\nexport class NgxGalleryBulletsComponent {\n  @Input() count: number;\n  @Input() active: number = 0;\n\n  @Output() onChange = new EventEmitter();\n\n  getBullets(): number[] {\n      return Array(this.count);\n  }\n\n  handleChange(event: Event, index: number): void {\n      this.onChange.emit(index);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxGalleryComponent } from './ngx-gallery.component';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image/ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport { NgxGalleryActionComponent } from './ngx-gallery-action/ngx-gallery-action.component';\nimport { NgxGalleryArrowsComponent } from './ngx-gallery-arrows/ngx-gallery-arrows.component';\nimport { NgxGalleryBulletsComponent } from './ngx-gallery-bullets/ngx-gallery-bullets.component';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [\n    NgxGalleryComponent,\n    NgxGalleryPreviewComponent, \n    NgxGalleryImageComponent,\n    NgxGalleryThumbnailsComponent,\n    NgxGalleryActionComponent,\n    NgxGalleryArrowsComponent,\n    NgxGalleryBulletsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [NgxGalleryComponent]\n})\nexport class NgxGalleryModule { }\n","import { SafeResourceUrl } from '@angular/platform-browser';\r\n\r\nexport interface INgxGalleryImage {\r\n    small?: string | SafeResourceUrl;\r\n    medium?: string | SafeResourceUrl;\r\n    big?: string | SafeResourceUrl;\r\n    description?: string;\r\n    url?: string;\r\n    label?: string;\r\n}\r\n\r\nexport class NgxGalleryImage implements INgxGalleryImage {\r\n    small?: string | SafeResourceUrl;\r\n    medium?: string | SafeResourceUrl;\r\n    big?: string | SafeResourceUrl;\r\n    description?: string;\r\n    url?: string;\r\n    label?: string;\r\n\r\n    constructor(obj: INgxGalleryImage) {\r\n        this.small = obj.small;\r\n        this.medium = obj.medium;\r\n        this.big = obj.big;\r\n        this.description = obj.description;\r\n        this.url = obj.url;\r\n        this.label = obj.label;\r\n    }\r\n}\r\n","/*\n * Public API Surface of ngx-gallery\n */\nexport * from './lib/ngx-gallery.component';\nexport * from './lib/ngx-gallery.module';\nexport * from './lib/ngx-gallery-action/ngx-gallery-action.component';\nexport * from './lib/ngx-gallery-image/ngx-gallery-image.component';\nexport * from './lib/ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nexport * from './lib/ngx-gallery-preview/ngx-gallery-preview.component';\nexport * from './lib/ngx-gallery-arrows/ngx-gallery-arrows.component';\nexport * from './lib/ngx-gallery-bullets/ngx-gallery-bullets.component';\nexport * from './lib/ngx-gallery-options';\nexport * from './lib/ngx-gallery-image.model';\nexport * from './lib/ngx-gallery-animation.model';\nexport * from './lib/ngx-gallery-helper.service';\nexport * from './lib/ngx-gallery-image-size.model';\nexport * from './lib/ngx-gallery-layout.model';\nexport * from './lib/ngx-gallery-order.model';\nexport * from './lib/ngx-gallery-ordered-image.model';\nexport * from './lib/ngx-gallery-action.model';","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}