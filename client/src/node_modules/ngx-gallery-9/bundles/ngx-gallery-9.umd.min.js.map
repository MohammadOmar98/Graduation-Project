{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-gallery-9/lib/ngx-gallery-helper.service.ts","ng://ngx-gallery-9/lib/ngx-gallery-animation.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-image-size.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-layout.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-order.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-action.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-options.ts","ng://ngx-gallery-9/lib/ngx-gallery-ordered-image.model.ts","ng://ngx-gallery-9/lib/ngx-gallery-preview/ngx-gallery-preview.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-image/ngx-gallery-image.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-thumbnails/ngx-gallery-thumbnails.component.ts","ng://ngx-gallery-9/lib/ngx-gallery.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-action/ngx-gallery-action.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-arrows/ngx-gallery-arrows.component.ts","ng://ngx-gallery-9/lib/ngx-gallery-bullets/ngx-gallery-bullets.component.ts","ng://ngx-gallery-9/lib/ngx-gallery.module.ts","ng://ngx-gallery-9/lib/ngx-gallery-image.model.ts"],"names":["__decorate","decorators","target","key","desc","d","c","arguments","length","r","Object","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","__read","o","n","m","Symbol","iterator","e","call","ar","next","done","push","value","error","NgxGalleryHelperService","renderer","this","swipeHandlers","Map","prototype","manageSwipe","status","element","id","nextHandler","prevHandler","handlers","getSwipeHandlers","set","listen","nativeElement","map","handler","removeSwipeHandlers","validateUrl","url","replace","RegExp","getBackgroundUrl","image","get","delete","Renderer2","Injectable","NgxGalleryAnimation","Fade","Slide","Rotate","Zoom","NgxGalleryImageSize","Cover","Contain","NgxGalleryLayout","ThumbnailsTop","ThumbnailsBottom","NgxGalleryOrder","Column","Row","Page","action","icon","disabled","titleText","onClick","obj","preventDefaults","undefined","breakpoint","use","source","defaultValue","width","height","fullWidth","layout","startIndex","linkTarget","lazyLoading","imagePercent","imageArrows","imageArrowsAutoHide","imageSwipe","imageAnimation","imageSize","imageAutoPlay","imageAutoPlayInterval","imageAutoPlayPauseOnHover","imageInfinityMove","imageActions","NgxGalleryAction","imageDescription","imageBullets","thumbnails","thumbnailsColumns","thumbnailsRows","thumbnailsPercent","thumbnailsMargin","thumbnailsArrows","thumbnailsArrowsAutoHide","thumbnailsSwipe","thumbnailsMoveSize","thumbnailsOrder","thumbnailsRemainingCount","thumbnailsAsLinks","thumbnailsAutoHide","thumbnailMargin","thumbnailSize","thumbnailActions","preview","previewDescription","previewArrows","previewArrowsAutoHide","previewSwipe","previewFullscreen","previewForceFullscreen","previewCloseOnClick","previewCloseOnEsc","previewKeyboardNavigation","previewAnimation","previewAutoPlay","previewAutoPlayInterval","previewAutoPlayPauseOnHover","previewInfinityMove","previewZoom","previewZoomStep","previewZoomMax","previewZoomMin","previewRotate","previewDownload","previewCustom","previewBullets","arrowPrevIcon","arrowNextIcon","closeIcon","fullscreenIcon","spinnerIcon","zoomInIcon","zoomOutIcon","rotateLeftIcon","rotateRightIcon","downloadIcon","actions","src","index","NgxGalleryPreviewComponent","sanitization","elementRef","helperService","changeDetectorRef","showSpinner","positionLeft","positionTop","zoomValue","loading","rotateValue","onOpen","EventEmitter","onClose","onActiveChange","isOpen","initialX","initialY","initialLeft","initialTop","isMove","ngOnInit","arrows","arrowsAutoHide","ngOnChanges","changes","_this","swipe","showNext","showPrev","ngOnDestroy","keyDownListener","onMouseEnter","onMouseLeave","onKeyDown","keyboardNavigation","isKeyboardPrev","isKeyboardNext","closeOnEsc","isKeyboardEsc","close","open","emit","show","forceFullscreen","manageFullscreen","closeFullscreen","stopAutoPlay","imageMouseEnter","autoPlay","autoPlayPauseOnHover","imageMouseLeave","startAutoPlay","timer","setTimeout","autoPlayInterval","clearTimeout","showAtIndex","canShowNext","images","canShowPrev","infinityMove","fullscreen","doc","document","fullscreenElement","mozFullScreenElement","webkitFullscreenElement","msFullscreenElement","openFullscreen","getSafeUrl","substr","bypassSecurityTrustUrl","zoomIn","canZoomIn","zoomStep","zoomMax","zoomOut","canZoomOut","zoomMin","resetPosition","rotateLeft","rotateRight","getTransform","bypassSecurityTrustStyle","canDragOnZoom","zoom","mouseDownHandler","getClientX","getClientY","preventDefault","mouseUpHandler","mouseMoveHandler","touches","clientX","clientY","keyCode","documentElement","requestFullscreen","msRequestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","isFullscreen","exitFullscreen","msExitFullscreen","mozCancelFullScreen","webkitExitFullscreen","first","animation","_show","srcIndex","description","descriptions","markForCheck","isLoaded","previewImage","onload","img","complete","naturalWidth","DomSanitizer","ElementRef","ChangeDetectorRef","Input","Output","ViewChild","HostListener","Component","selector","template","NgxGalleryImageComponent","canChangeImage","reset","selectedIndex","getImages","indexes_1","prevIndex","nextIndex","filter","indexOf","setInterval","clearInterval","handleClick","event","clickable","stopPropagation","setChangeTimeout","timeout","NgxGalleryThumbnailsComponent","minStopIndex","validateIndex","moveRight","moveLeft","remainingCountValue","rows","columns","mouseenter","setDefaultPosition","remainingCount","slice","order","stopIndex","moveSize","hasLink","links","canMoveRight","maxIndex","getMaxIndex","setThumbnailsPosition","canMoveLeft","getThumbnailLeft","calculatedIndex","Math","floor","ceil","getThumbnailPosition","getThumbnailTop","getThumbnailWidth","getThumbnailDimension","getThumbnailHeight","thumbnailsLeft","thumbnailsMarginLeft","margin","canShowArrows","getVisibleCount","newIndex","count","getSafeStyle","NgxGalleryComponent","myElement","imagesReady","change","previewOpen","previewClose","previewChange","oldImagesLength","prevBreakpoint","options","opt","NgxGalleryOptions","sortOptions","setBreakpoint","setOptions","checkFullWidth","currentOptions","ngDoCheck","oldImages","setImages","resetThumbnails","ngAfterViewInit","onResize","fullWidthTimeout","getImageHeight","getThumbnailsHeight","getThumbnailsMarginTop","getThumbnailsMarginBottom","openPreview","previewEnabled","onPreviewOpen","onPreviewClose","selectFromImage","select","selectFromThumbnails","previewSelect","moveThumbnailsRight","thubmnails","moveThumbnailsLeft","canMoveThumbnailsRight","canMoveThumbnailsLeft","body","clientWidth","left","parentNode","innerWidth","smallImages","small","mediumImages","NgxGalleryOrderedImage","medium","bigImages","big","labels","label","breakpoints","window","pop","concat","__spread","a","sort","b","combineOptions","second","keys","val","HostBinding","providers","NgxGalleryActionComponent","changeDetection","ChangeDetectionStrategy","OnPush","NgxGalleryArrowsComponent","onPrevClick","onNextClick","handlePrevClick","handleNextClick","NgxGalleryBulletsComponent","active","onChange","getBullets","Array","handleChange","NgxGalleryModule","NgModule","declarations","imports","CommonModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, Renderer2, ElementRef } from '@angular/core';\n\n@Injectable()\nexport class NgxGalleryHelperService {\n  private swipeHandlers: Map<string, Function[]> = new Map<string, Function[]>();\n\n  constructor(private renderer: Renderer2) {}\n\n  manageSwipe(status: boolean, element: ElementRef, id: string, nextHandler: Function, prevHandler: Function): void {\n\n      const handlers = this.getSwipeHandlers(id);\n\n      // swipeleft and swiperight are available only if hammerjs is included\n      try {\n          if (status && !handlers) {\n              this.swipeHandlers.set(id, [\n                  this.renderer.listen(element.nativeElement, 'swipeleft', () => nextHandler()),\n                  this.renderer.listen(element.nativeElement, 'swiperight', () => prevHandler())\n              ]);\n          } else if (!status && handlers) {\n              handlers.map((handler) => handler());\n              this.removeSwipeHandlers(id);\n          }\n      } catch (e) {}\n  }\n\n  validateUrl(url: string): string {\n      if (url.replace) {\n          return url.replace(new RegExp(' ', 'g'), '%20')\n              .replace(new RegExp('\\'', 'g'), '%27');\n      } else {\n          return url;\n      }\n  }\n\n  getBackgroundUrl(image: string) {\n      return 'url(\\'' + this.validateUrl(image) + '\\')';\n  }\n\n  private getSwipeHandlers(id: string): Function[] | undefined {\n      return this.swipeHandlers.get(id);\n  }\n\n  private removeSwipeHandlers(id: string): void {\n      this.swipeHandlers.delete(id);\n  }\n}\n","export class NgxGalleryAnimation {\r\n    static Fade = 'fade';\r\n    static Slide = 'slide';\r\n    static Rotate = 'rotate';\r\n    static Zoom = 'zoom';\r\n}\r\n","export class NgxGalleryImageSize {\r\n    static Cover = 'cover';\r\n    static Contain = 'contain';\r\n}\r\n","export class NgxGalleryLayout {\r\n    static ThumbnailsTop = 'thumbnails-top';\r\n    static ThumbnailsBottom = 'thumbnails-bottom';\r\n}\r\n","export class NgxGalleryOrder {\r\n    static Column = 1;\r\n    static Row = 2;\r\n    static Page = 3;\r\n}\r\n","export interface INgxGalleryAction {\r\n    icon: string;\r\n    disabled?: boolean;\r\n    titleText?: string;\r\n\r\n    onClick: (event: Event, index: number) => void;\r\n}\r\n\r\nexport class NgxGalleryAction implements INgxGalleryAction {\r\n    icon: string;\r\n    disabled?: boolean;\r\n    titleText?: string;\r\n\r\n    onClick: (event: Event, index: number) => void;\r\n\r\n    constructor(action: INgxGalleryAction) {\r\n        this.icon = action.icon;\r\n        this.disabled = action.disabled ? action.disabled : false;\r\n        this.titleText = action.titleText ? action.titleText : '';\r\n\r\n        this.onClick = action.onClick;\r\n    }\r\n}\r\n","import { NgxGalleryAnimation } from './ngx-gallery-animation.model';\r\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\r\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\r\nimport { NgxGalleryOrder } from './ngx-gallery-order.model';\r\nimport { NgxGalleryAction } from './ngx-gallery-action.model';\r\n\r\nexport interface INgxGalleryOptions {\r\n    width?: string;\r\n    height?: string;\r\n    breakpoint?: number;\r\n    fullWidth?: boolean;\r\n    layout?: string;\r\n    startIndex?: number;\r\n    linkTarget?: string;\r\n    lazyLoading?: boolean;\r\n    image?: boolean;\r\n    imagePercent?: number;\r\n    imageArrows?: boolean;\r\n    imageArrowsAutoHide?: boolean;\r\n    imageSwipe?: boolean;\r\n    imageAnimation?: string;\r\n    imageSize?: string;\r\n    imageAutoPlay?: boolean;\r\n    imageAutoPlayInterval?: number;\r\n    imageAutoPlayPauseOnHover?: boolean;\r\n    imageInfinityMove?: boolean;\r\n    imageActions?: NgxGalleryAction[];\r\n    imageDescription?: boolean;\r\n    imageBullets?: boolean;\r\n    thumbnails?: boolean;\r\n    thumbnailsColumns?: number;\r\n    thumbnailsRows?: number;\r\n    thumbnailsPercent?: number;\r\n    thumbnailsMargin?: number;\r\n    thumbnailsArrows?: boolean;\r\n    thumbnailsArrowsAutoHide?: boolean;\r\n    thumbnailsSwipe?: boolean;\r\n    thumbnailsMoveSize?: number;\r\n    thumbnailsOrder?: NgxGalleryOrder;\r\n    thumbnailsRemainingCount?: boolean;\r\n    thumbnailsAsLinks?: boolean;\r\n    thumbnailsAutoHide?: boolean;\r\n    thumbnailMargin?: number;\r\n    thumbnailSize?: string;\r\n    thumbnailActions?: NgxGalleryAction[];\r\n    preview?: boolean;\r\n    previewDescription?: boolean;\r\n    previewArrows?: boolean;\r\n    previewArrowsAutoHide?: boolean;\r\n    previewSwipe?: boolean;\r\n    previewFullscreen?: boolean;\r\n    previewForceFullscreen?: boolean;\r\n    previewCloseOnClick?: boolean;\r\n    previewCloseOnEsc?: boolean;\r\n    previewKeyboardNavigation?: boolean;\r\n    previewAnimation?: boolean;\r\n    previewAutoPlay?: boolean;\r\n    previewAutoPlayInterval?: number;\r\n    previewAutoPlayPauseOnHover?: boolean;\r\n    previewInfinityMove?: boolean;\r\n    previewZoom?: boolean;\r\n    previewZoomStep?: number;\r\n    previewZoomMax?: number;\r\n    previewZoomMin?: number;\r\n    previewRotate?: boolean;\r\n    previewDownload?: boolean;\r\n    previewCustom?: (index: number) => void;\r\n    previewBullets?: boolean;\r\n    arrowPrevIcon?: string;\r\n    arrowNextIcon?: string;\r\n    closeIcon?: string;\r\n    fullscreenIcon?: string;\r\n    spinnerIcon?: string;\r\n    zoomInIcon?: string;\r\n    zoomOutIcon?: string;\r\n    rotateLeftIcon?: string;\r\n    rotateRightIcon?: string;\r\n    downloadIcon?: string;\r\n    actions?: NgxGalleryAction[];\r\n}\r\n\r\nexport class NgxGalleryOptions implements INgxGalleryOptions {\r\n    width?: string;\r\n    height?: string;\r\n    breakpoint?: number;\r\n    fullWidth?: boolean;\r\n    layout?: string;\r\n    startIndex?: number;\r\n    linkTarget?: string;\r\n    lazyLoading?: boolean;\r\n    image?: boolean;\r\n    imagePercent?: number;\r\n    imageArrows?: boolean;\r\n    imageArrowsAutoHide?: boolean;\r\n    imageSwipe?: boolean;\r\n    imageAnimation?: string;\r\n    imageSize?: string;\r\n    imageAutoPlay?: boolean;\r\n    imageAutoPlayInterval?: number;\r\n    imageAutoPlayPauseOnHover?: boolean;\r\n    imageInfinityMove?: boolean;\r\n    imageActions?: NgxGalleryAction[];\r\n    imageDescription?: boolean;\r\n    imageBullets?: boolean;\r\n    thumbnails?: boolean;\r\n    thumbnailsColumns?: number;\r\n    thumbnailsRows?: number;\r\n    thumbnailsPercent?: number;\r\n    thumbnailsMargin?: number;\r\n    thumbnailsArrows?: boolean;\r\n    thumbnailsArrowsAutoHide?: boolean;\r\n    thumbnailsSwipe?: boolean;\r\n    thumbnailsMoveSize?: number;\r\n    thumbnailsOrder?: NgxGalleryOrder;\r\n    thumbnailsRemainingCount?: boolean;\r\n    thumbnailsAsLinks?: boolean;\r\n    thumbnailsAutoHide?: boolean;\r\n    thumbnailMargin?: number;\r\n    thumbnailSize?: string;\r\n    thumbnailActions?: NgxGalleryAction[];\r\n    preview?: boolean;\r\n    previewDescription?: boolean;\r\n    previewArrows?: boolean;\r\n    previewArrowsAutoHide?: boolean;\r\n    previewSwipe?: boolean;\r\n    previewFullscreen?: boolean;\r\n    previewForceFullscreen?: boolean;\r\n    previewCloseOnClick?: boolean;\r\n    previewCloseOnEsc?: boolean;\r\n    previewKeyboardNavigation?: boolean;\r\n    previewAnimation?: boolean;\r\n    previewAutoPlay?: boolean;\r\n    previewAutoPlayInterval?: number;\r\n    previewAutoPlayPauseOnHover?: boolean;\r\n    previewInfinityMove?: boolean;\r\n    previewZoom?: boolean;\r\n    previewZoomStep?: number;\r\n    previewZoomMax?: number;\r\n    previewZoomMin?: number;\r\n    previewRotate?: boolean;\r\n    previewDownload?: boolean;\r\n    previewCustom?: (index: number) => void;\r\n    previewBullets?: boolean;\r\n    arrowPrevIcon?: string;\r\n    arrowNextIcon?: string;\r\n    closeIcon?: string;\r\n    fullscreenIcon?: string;\r\n    spinnerIcon?: string;\r\n    zoomInIcon?: string;\r\n    zoomOutIcon?: string;\r\n    rotateLeftIcon?: string;\r\n    rotateRightIcon?: string;\r\n    downloadIcon?: string;\r\n    actions?: NgxGalleryAction[];\r\n\r\n    constructor(obj: INgxGalleryOptions) {\r\n\r\n        const preventDefaults = obj.breakpoint === undefined ? false : true;\r\n\r\n        function use<T>(source: T, defaultValue: T): T {\r\n            return obj && (source !== undefined || preventDefaults) ? source : defaultValue;\r\n        }\r\n\r\n        this.breakpoint = use(obj.breakpoint, undefined);\r\n        this.width = use(obj.width, '500px');\r\n        this.height = use(obj.height, '400px');\r\n        this.fullWidth = use(obj.fullWidth, false);\r\n        this.layout = use(obj.layout, NgxGalleryLayout.ThumbnailsBottom);\r\n        this.startIndex = use(obj.startIndex, 0);\r\n        this.linkTarget = use(obj.linkTarget, '_blank');\r\n        this.lazyLoading = use(obj.lazyLoading, true);\r\n\r\n        this.image = use(obj.image, true);\r\n        this.imagePercent = use(obj.imagePercent, 75);\r\n        this.imageArrows = use(obj.imageArrows, true);\r\n        this.imageArrowsAutoHide = use(obj.imageArrowsAutoHide, false);\r\n        this.imageSwipe = use(obj.imageSwipe, false);\r\n        this.imageAnimation = use(obj.imageAnimation, NgxGalleryAnimation.Fade);\r\n        this.imageSize = use(obj.imageSize, NgxGalleryImageSize.Cover);\r\n        this.imageAutoPlay = use(obj.imageAutoPlay, false);\r\n        this.imageAutoPlayInterval = use(obj.imageAutoPlayInterval, 2000);\r\n        this.imageAutoPlayPauseOnHover = use(obj.imageAutoPlayPauseOnHover, false);\r\n        this.imageInfinityMove = use(obj.imageInfinityMove, false);\r\n        if (obj && obj.imageActions && obj.imageActions.length) {\r\n            obj.imageActions = obj.imageActions.map(action => new NgxGalleryAction(action));\r\n        }\r\n        this.imageActions = use(obj.imageActions, []);\r\n        this.imageDescription = use(obj.imageDescription, false);\r\n        this.imageBullets = use(obj.imageBullets, false);\r\n\r\n        this.thumbnails = use(obj.thumbnails, true);\r\n        this.thumbnailsColumns = use(obj.thumbnailsColumns, 4);\r\n        this.thumbnailsRows = use(obj.thumbnailsRows, 1);\r\n        this.thumbnailsPercent = use(obj.thumbnailsPercent, 25);\r\n        this.thumbnailsMargin = use(obj.thumbnailsMargin, 10);\r\n        this.thumbnailsArrows = use(obj.thumbnailsArrows, true);\r\n        this.thumbnailsArrowsAutoHide = use(obj.thumbnailsArrowsAutoHide, false);\r\n        this.thumbnailsSwipe = use(obj.thumbnailsSwipe, false);\r\n        this.thumbnailsMoveSize = use(obj.thumbnailsMoveSize, 1);\r\n        this.thumbnailsOrder = use(obj.thumbnailsOrder, NgxGalleryOrder.Column);\r\n        this.thumbnailsRemainingCount = use(obj.thumbnailsRemainingCount, false);\r\n        this.thumbnailsAsLinks = use(obj.thumbnailsAsLinks, false);\r\n        this.thumbnailsAutoHide = use(obj.thumbnailsAutoHide, false);\r\n        this.thumbnailMargin = use(obj.thumbnailMargin, 10);\r\n        this.thumbnailSize = use(obj.thumbnailSize, NgxGalleryImageSize.Cover);\r\n        if (obj && obj.thumbnailActions && obj.thumbnailActions.length) {\r\n            obj.thumbnailActions = obj.thumbnailActions.map(action => new NgxGalleryAction(action));\r\n        }\r\n        this.thumbnailActions = use(obj.thumbnailActions, []);\r\n\r\n        this.preview = use(obj.preview, true);\r\n        this.previewDescription = use(obj.previewDescription, true);\r\n        this.previewArrows = use(obj.previewArrows, true);\r\n        this.previewArrowsAutoHide = use(obj.previewArrowsAutoHide, false);\r\n        this.previewSwipe = use(obj.previewSwipe, false);\r\n        this.previewFullscreen = use(obj.previewFullscreen, false);\r\n        this.previewForceFullscreen = use(obj.previewForceFullscreen, false);\r\n        this.previewCloseOnClick = use(obj.previewCloseOnClick, false);\r\n        this.previewCloseOnEsc = use(obj.previewCloseOnEsc, false);\r\n        this.previewKeyboardNavigation = use(obj.previewKeyboardNavigation, false);\r\n        this.previewAnimation = use(obj.previewAnimation, true);\r\n        this.previewAutoPlay = use(obj.previewAutoPlay, false);\r\n        this.previewAutoPlayInterval = use(obj.previewAutoPlayInterval, 2000);\r\n        this.previewAutoPlayPauseOnHover = use(obj.previewAutoPlayPauseOnHover, false);\r\n        this.previewInfinityMove = use(obj.previewInfinityMove, false);\r\n        this.previewZoom = use(obj.previewZoom, false);\r\n        this.previewZoomStep = use(obj.previewZoomStep, 0.1);\r\n        this.previewZoomMax = use(obj.previewZoomMax, 2);\r\n        this.previewZoomMin = use(obj.previewZoomMin, 0.5);\r\n        this.previewRotate = use(obj.previewRotate, false);\r\n        this.previewDownload = use(obj.previewDownload, false);\r\n        this.previewCustom = use(obj.previewCustom, undefined);\r\n        this.previewBullets = use(obj.previewBullets, false);\r\n\r\n        this.arrowPrevIcon = use(obj.arrowPrevIcon, 'fa fa-arrow-circle-left');\r\n        this.arrowNextIcon = use(obj.arrowNextIcon, 'fa fa-arrow-circle-right');\r\n        this.closeIcon = use(obj.closeIcon, 'fa fa-times-circle');\r\n        this.fullscreenIcon = use(obj.fullscreenIcon, 'fa fa-arrows-alt');\r\n        this.spinnerIcon = use(obj.spinnerIcon, 'fa fa-spinner fa-pulse fa-3x fa-fw');\r\n        this.zoomInIcon = use(obj.zoomInIcon, 'fa fa-search-plus');\r\n        this.zoomOutIcon = use(obj.zoomOutIcon, 'fa fa-search-minus');\r\n        this.rotateLeftIcon = use(obj.rotateLeftIcon, 'fa fa-undo');\r\n        this.rotateRightIcon = use(obj.rotateRightIcon, 'fa fa-repeat');\r\n        this.downloadIcon = use(obj.downloadIcon, 'fa fa-arrow-circle-down');\r\n\r\n        if (obj && obj.actions && obj.actions.length) {\r\n            obj.actions = obj.actions.map(action => new NgxGalleryAction(action));\r\n        }\r\n        this.actions = use(obj.actions, []);\r\n    }\r\n}\r\n","import { SafeResourceUrl } from '@angular/platform-browser';\r\n\r\nexport interface INgxGalleryOrderedImage {\r\n    src: string | SafeResourceUrl;\r\n    index: number;\r\n}\r\n\r\nexport class NgxGalleryOrderedImage implements INgxGalleryOrderedImage {\r\n    src: string | SafeResourceUrl;\r\n    index: number;\r\n\r\n    constructor(obj: INgxGalleryOrderedImage) {\r\n        this.src = obj.src;\r\n        this.index = obj.index;\r\n    }\r\n}\r\n","import { Component, OnInit, Input, OnChanges, Output, EventEmitter, ViewChild, ElementRef, ChangeDetectorRef, SimpleChanges, HostListener, Renderer2 } from '@angular/core';\nimport { SafeResourceUrl, SafeUrl, DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\n\n@Component({\n  selector: 'ngx-gallery-preview',\n  templateUrl: './ngx-gallery-preview.component.html',\n  styleUrls: ['./ngx-gallery-preview.component.scss']\n})\nexport class NgxGalleryPreviewComponent implements OnInit, OnChanges {\n\n  src: SafeUrl;\n  srcIndex: number;\n  description: string;\n  showSpinner = false;\n  positionLeft = 0;\n  positionTop = 0;\n  zoomValue = 1;\n  loading = false;\n  rotateValue = 0;\n  index = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() fullscreen: boolean;\n  @Input() forceFullscreen: boolean;\n  @Input() closeOnClick: boolean;\n  @Input() closeOnEsc: boolean;\n  @Input() keyboardNavigation: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() closeIcon: string;\n  @Input() fullscreenIcon: string;\n  @Input() spinnerIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() zoom: boolean;\n  @Input() zoomStep: number;\n  @Input() zoomMax: number;\n  @Input() zoomMin: number;\n  @Input() zoomInIcon: string;\n  @Input() zoomOutIcon: string;\n  @Input() animation: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() rotate: boolean;\n  @Input() rotateLeftIcon: string;\n  @Input() rotateRightIcon: string;\n  @Input() download: boolean;\n  @Input() downloadIcon: string;\n  @Input() bullets: string;\n\n  @Output() onOpen = new EventEmitter();\n  @Output() onClose = new EventEmitter();\n  @Output() onActiveChange = new EventEmitter<number>();\n\n  @ViewChild('previewImage') previewImage: ElementRef;\n\n  private isOpen = false;\n  private timer;\n  private initialX = 0;\n  private initialY = 0;\n  private initialLeft = 0;\n  private initialTop = 0;\n  private isMove = false;\n\n  private keyDownListener: Function;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n      private helperService: NgxGalleryHelperService, private renderer: Renderer2,\n      private changeDetectorRef: ChangeDetectorRef) {}\n\n  ngOnInit(): void {\n      if (this.arrows && this.arrowsAutoHide) {\n          this.arrows = false;\n      }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef,\n          'preview', () => this.showNext(), () => this.showPrev());\n      }\n  }\n\n  ngOnDestroy() {\n      if (this.keyDownListener) {\n          this.keyDownListener();\n      }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      if (this.arrowsAutoHide && !this.arrows) {\n          this.arrows = true;\n      }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      if (this.arrowsAutoHide && this.arrows) {\n          this.arrows = false;\n      }\n  }\n\n  onKeyDown(e) {\n      if (this.isOpen) {\n          if (this.keyboardNavigation) {\n              if (this.isKeyboardPrev(e)) {\n                  this.showPrev();\n              } else if (this.isKeyboardNext(e)) {\n                  this.showNext();\n              }\n          }\n          if (this.closeOnEsc && this.isKeyboardEsc(e)) {\n              this.close();\n          }\n      }\n  }\n\n  open(index: number): void {\n      this.onOpen.emit();\n\n      this.index = index;\n      this.isOpen = true;\n      this.show(true);\n\n      if (this.forceFullscreen) {\n          this.manageFullscreen();\n      }\n\n      this.keyDownListener = this.renderer.listen(\"window\", \"keydown\", (e) => this.onKeyDown(e));\n  }\n\n  close(): void {\n      this.isOpen = false;\n      this.closeFullscreen();\n      this.onClose.emit();\n\n      this.stopAutoPlay();\n\n      if (this.keyDownListener) {\n          this.keyDownListener();\n      }\n  }\n\n  imageMouseEnter(): void {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.stopAutoPlay();\n      }\n  }\n\n  imageMouseLeave(): void {\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.startAutoPlay();\n      }\n  }\n\n  startAutoPlay(): void {\n      if (this.autoPlay) {\n          this.stopAutoPlay();\n\n          this.timer = setTimeout(() => {\n              if (!this.showNext()) {\n                  this.index = -1;\n                  this.showNext();\n              }\n          }, this.autoPlayInterval);\n      }\n  }\n\n  stopAutoPlay(): void {\n      if (this.timer) {\n          clearTimeout(this.timer);\n      }\n  }\n\n  showAtIndex(index: number): void {\n      this.index = index;\n      this.show();\n  }\n\n  showNext(): boolean {\n      if (this.canShowNext()) {\n          this.index++;\n\n          if (this.index === this.images.length) {\n              this.index = 0;\n          }\n\n          this.show();\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  showPrev(): void {\n      if (this.canShowPrev()) {\n          this.index--;\n\n          if (this.index < 0) {\n              this.index = this.images.length - 1;\n          }\n\n          this.show();\n      }\n  }\n\n  canShowNext(): boolean {\n      if (this.loading) {\n          return false;\n      } else if (this.images) {\n          return this.infinityMove || this.index < this.images.length - 1 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.loading) {\n          return false;\n      } else if (this.images) {\n          return this.infinityMove || this.index > 0 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  manageFullscreen(): void {\n      if (this.fullscreen || this.forceFullscreen) {\n          const doc = <any>document;\n\n          if (!doc.fullscreenElement && !doc.mozFullScreenElement\n              && !doc.webkitFullscreenElement && !doc.msFullscreenElement) {\n              this.openFullscreen();\n          } else {\n              this.closeFullscreen();\n          }\n      }\n  }\n\n  getSafeUrl(image: string): SafeUrl {\n      return image.substr(0, 10) === 'data:image' ?\n          image : this.sanitization.bypassSecurityTrustUrl(image);\n  }\n\n  zoomIn(): void {\n      if (this.canZoomIn()) {\n          this.zoomValue += this.zoomStep;\n\n          if (this.zoomValue > this.zoomMax) {\n              this.zoomValue = this.zoomMax;\n          }\n      }\n  }\n\n  zoomOut(): void {\n      if (this.canZoomOut()) {\n          this.zoomValue -= this.zoomStep;\n\n          if (this.zoomValue < this.zoomMin) {\n              this.zoomValue = this.zoomMin;\n          }\n\n          if (this.zoomValue <= 1) {\n              this.resetPosition()\n          }\n      }\n  }\n\n  rotateLeft(): void {\n      this.rotateValue -= 90;\n  }\n\n  rotateRight(): void {\n      this.rotateValue += 90;\n  }\n\n  getTransform(): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle('scale(' + this.zoomValue + ') rotate(' + this.rotateValue + 'deg)');\n  }\n\n  canZoomIn(): boolean {\n      return this.zoomValue < this.zoomMax ? true : false;\n  }\n\n  canZoomOut(): boolean {\n      return this.zoomValue > this.zoomMin ? true : false;\n  }\n\n  canDragOnZoom() {\n      return this.zoom && this.zoomValue > 1;\n  }\n\n  mouseDownHandler(e): void {\n      if (this.canDragOnZoom()) {\n          this.initialX = this.getClientX(e);\n          this.initialY = this.getClientY(e);\n          this.initialLeft = this.positionLeft;\n          this.initialTop = this.positionTop;\n          this.isMove = true;\n\n          e.preventDefault();\n      }\n  }\n\n  mouseUpHandler(e): void {\n      this.isMove = false;\n  }\n\n  mouseMoveHandler(e) {\n      if (this.isMove) {\n          this.positionLeft = this.initialLeft + (this.getClientX(e) - this.initialX);\n          this.positionTop = this.initialTop + (this.getClientY(e) - this.initialY);\n      }\n  }\n\n  private getClientX(e): number {\n      return e.touches && e.touches.length ? e.touches[0].clientX : e.clientX;\n  }\n\n  private getClientY(e): number {\n      return e.touches && e.touches.length ? e.touches[0].clientY : e.clientY;\n  }\n\n  private resetPosition() {\n      if (this.zoom) {\n          this.positionLeft = 0;\n          this.positionTop = 0;\n      }\n  }\n\n  private isKeyboardNext(e): boolean {\n      return e.keyCode === 39 ? true : false;\n  }\n\n  private isKeyboardPrev(e): boolean {\n      return e.keyCode === 37 ? true : false;\n  }\n\n  private isKeyboardEsc(e): boolean {\n      return e.keyCode === 27 ? true : false;\n  }\n\n  private openFullscreen(): void {\n      const element = <any>document.documentElement;\n\n      if (element.requestFullscreen) {\n          element.requestFullscreen();\n      } else if (element.msRequestFullscreen) {\n          element.msRequestFullscreen();\n      } else if (element.mozRequestFullScreen) {\n          element.mozRequestFullScreen();\n      } else if (element.webkitRequestFullscreen) {\n          element.webkitRequestFullscreen();\n      }\n  }\n\n  private closeFullscreen(): void {\n      if (this.isFullscreen()) {\n          const doc = <any>document;\n\n          if (doc.exitFullscreen) {\n              doc.exitFullscreen();\n          } else if (doc.msExitFullscreen) {\n              doc.msExitFullscreen();\n          } else if (doc.mozCancelFullScreen) {\n              doc.mozCancelFullScreen();\n          } else if (doc.webkitExitFullscreen) {\n              doc.webkitExitFullscreen();\n          }\n      }\n  }\n\n  private isFullscreen() {\n      const doc = <any>document;\n\n      return doc.fullscreenElement || doc.webkitFullscreenElement\n          || doc.mozFullScreenElement || doc.msFullscreenElement;\n  }\n\n\n\n  private show(first = false) {\n      this.loading = true;\n      this.stopAutoPlay();\n\n      this.onActiveChange.emit(this.index);\n\n      if (first || !this.animation) {\n          this._show();\n      } else {\n          setTimeout(() => this._show(), 600);\n      }\n  }\n\n  private _show() {\n      this.zoomValue = 1;\n      this.rotateValue = 0;\n      this.resetPosition();\n\n      this.src = this.getSafeUrl(<string>this.images[this.index]);\n      this.srcIndex = this.index;\n      this.description = this.descriptions[this.index];\n      this.changeDetectorRef.markForCheck();\n\n      setTimeout(() => {\n          if (this.isLoaded(this.previewImage.nativeElement)) {\n              this.loading = false;\n              this.startAutoPlay();\n              this.changeDetectorRef.markForCheck();\n          } else {\n              setTimeout(() => {\n                  if (this.loading) {\n                      this.showSpinner = true;\n                      this.changeDetectorRef.markForCheck();\n                  }\n              })\n\n              this.previewImage.nativeElement.onload = () => {\n                  this.loading = false;\n                  this.showSpinner = false;\n                  this.previewImage.nativeElement.onload = null;\n                  this.startAutoPlay();\n                  this.changeDetectorRef.markForCheck();\n              }\n          }\n      })\n  }\n\n  private isLoaded(img): boolean {\n      if (!img.complete) {\n          return false;\n      }\n\n      if (typeof img.naturalWidth !== 'undefined' && img.naturalWidth === 0) {\n          return false;\n      }\n\n      return true;\n  }\n\n}","import { Component, OnInit, OnChanges, Input, Output, EventEmitter, ElementRef, SimpleChanges, HostListener } from '@angular/core';\nimport { NgxGalleryOrderedImage } from '../ngx-gallery-ordered-image.model';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\nimport { NgxGalleryAnimation } from '../ngx-gallery-animation.model';\n\n@Component({\n  selector: 'ngx-gallery-image',\n  templateUrl: './ngx-gallery-image.component.html',\n  styleUrls: ['./ngx-gallery-image.component.scss']\n})\nexport class NgxGalleryImageComponent implements OnInit, OnChanges {\n  @Input() images: NgxGalleryOrderedImage[];\n  @Input() clickable: boolean;\n  @Input() selectedIndex: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() swipe: boolean;\n  @Input() animation: string;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() autoPlay: boolean;\n  @Input() autoPlayInterval: number;\n  @Input() autoPlayPauseOnHover: boolean;\n  @Input() infinityMove: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n  @Input() descriptions: string[];\n  @Input() showDescription: boolean;\n  @Input() bullets: boolean;\n\n  @Output() onClick = new EventEmitter();\n  @Output() onActiveChange = new EventEmitter();\n\n  canChangeImage = true;\n\n  private timer;\n\n  constructor(private sanitization: DomSanitizer,\n      private elementRef: ElementRef, private helperService: NgxGalleryHelperService) {}\n\n  ngOnInit(): void {\n      if (this.arrows && this.arrowsAutoHide) {\n          this.arrows = false;\n      }\n\n      if (this.autoPlay) {\n          this.startAutoPlay();\n      }\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef, 'image', () => this.showNext(), () => this.showPrev());\n      }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      if (this.arrowsAutoHide && !this.arrows) {\n          this.arrows = true;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.stopAutoPlay();\n      }\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      if (this.arrowsAutoHide && this.arrows) {\n          this.arrows = false;\n      }\n\n      if (this.autoPlay && this.autoPlayPauseOnHover) {\n          this.startAutoPlay();\n      }\n  }\n\n  reset(index: number): void {\n      this.selectedIndex = index;\n  }\n\n  getImages(): NgxGalleryOrderedImage[] {\n      if (!this.images) {\n          return [];\n      }\n\n      if (this.lazyLoading) {\n          let indexes = [this.selectedIndex];\n          let prevIndex = this.selectedIndex - 1;\n\n          if (prevIndex === -1 && this.infinityMove) {\n              indexes.push(this.images.length - 1)\n          } else if (prevIndex >= 0) {\n              indexes.push(prevIndex);\n          }\n\n          let nextIndex = this.selectedIndex + 1;\n\n          if (nextIndex == this.images.length && this.infinityMove) {\n              indexes.push(0);\n          } else if (nextIndex < this.images.length) {\n              indexes.push(nextIndex);\n          }\n\n          return this.images.filter((img, i) => indexes.indexOf(i) != -1);\n      } else {\n          return this.images;\n      }\n  }\n\n  startAutoPlay(): void {\n      this.stopAutoPlay();\n\n      this.timer = setInterval(() => {\n          if (!this.showNext()) {\n              this.selectedIndex = -1;\n              this.showNext();\n          }\n      }, this.autoPlayInterval);\n  }\n\n  stopAutoPlay() {\n      if (this.timer) {\n          clearInterval(this.timer);\n      }\n  }\n\n  handleClick(event: Event, index: number): void {\n      if (this.clickable) {\n          this.onClick.emit(index);\n\n          event.stopPropagation();\n          event.preventDefault();\n      }\n  }\n\n  show(index: number) {\n      this.selectedIndex = index;\n      this.onActiveChange.emit(this.selectedIndex);\n      this.setChangeTimeout();\n  }\n\n  showNext(): boolean {\n      if (this.canShowNext() && this.canChangeImage) {\n          this.selectedIndex++;\n\n          if (this.selectedIndex === this.images.length) {\n              this.selectedIndex = 0;\n          }\n\n          this.onActiveChange.emit(this.selectedIndex);\n          this.setChangeTimeout();\n\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  showPrev(): void {\n      if (this.canShowPrev() && this.canChangeImage) {\n          this.selectedIndex--;\n\n          if (this.selectedIndex < 0) {\n              this.selectedIndex = this.images.length - 1;\n          }\n\n          this.onActiveChange.emit(this.selectedIndex);\n          this.setChangeTimeout();\n      }\n  }\n\n  setChangeTimeout() {\n      this.canChangeImage = false;\n      let timeout = 1000;\n\n      if (this.animation === NgxGalleryAnimation.Slide\n          || this.animation === NgxGalleryAnimation.Fade) {\n              timeout = 500;\n      }\n\n      setTimeout(() => {\n          this.canChangeImage = true;\n      }, timeout);\n  }\n\n  canShowNext(): boolean {\n      if (this.images) {\n          return this.infinityMove || this.selectedIndex < this.images.length - 1\n              ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.images) {\n          return this.infinityMove || this.selectedIndex > 0 ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n}\n","import { Component, OnChanges, Input, Output, EventEmitter, ElementRef, SimpleChanges, HostListener } from '@angular/core';\nimport { SafeResourceUrl, DomSanitizer, SafeStyle } from '@angular/platform-browser';\nimport { NgxGalleryAction } from '../ngx-gallery-action.model';\nimport { NgxGalleryHelperService } from '../ngx-gallery-helper.service';\nimport { NgxGalleryOrder } from '../ngx-gallery-order.model';\n\n@Component({\n  selector: 'ngx-gallery-thumbnails',\n  templateUrl: './ngx-gallery-thumbnails.component.html',\n  styleUrls: ['./ngx-gallery-thumbnails.component.scss']\n})\nexport class NgxGalleryThumbnailsComponent implements OnChanges {\n\n  thumbnailsLeft: string;\n  thumbnailsMarginLeft: string;\n  mouseenter: boolean;\n  remainingCountValue: number;\n\n  minStopIndex = 0;\n\n  @Input() images: string[] | SafeResourceUrl[];\n  @Input() links: string[];\n  @Input() labels: string[];\n  @Input() linkTarget: string;\n  @Input() columns: number;\n  @Input() rows: number;\n  @Input() arrows: boolean;\n  @Input() arrowsAutoHide: boolean;\n  @Input() margin: number;\n  @Input() selectedIndex: number;\n  @Input() clickable: boolean;\n  @Input() swipe: boolean;\n  @Input() size: string;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n  @Input() moveSize: number;\n  @Input() order: number;\n  @Input() remainingCount: boolean;\n  @Input() lazyLoading: boolean;\n  @Input() actions: NgxGalleryAction[];\n\n  @Output() onActiveChange = new EventEmitter();\n\n  private index = 0;\n\n  constructor(private sanitization: DomSanitizer, private elementRef: ElementRef,\n      private helperService: NgxGalleryHelperService) {}\n\n  ngOnChanges(changes: SimpleChanges): void {\n      if (changes['selectedIndex']) {\n          this.validateIndex();\n      }\n\n      if (changes['swipe']) {\n          this.helperService.manageSwipe(this.swipe, this.elementRef,\n          'thumbnails', () => this.moveRight(), () => this.moveLeft());\n      }\n\n      if (this.images) {\n          this.remainingCountValue = this.images.length - (this.rows * this.columns);\n      }\n  }\n\n  @HostListener('mouseenter') onMouseEnter() {\n      this.mouseenter = true;\n  }\n\n  @HostListener('mouseleave') onMouseLeave() {\n      this.mouseenter = false;\n  }\n\n  reset(index: number): void {\n      this.selectedIndex = index;\n      this.setDefaultPosition();\n\n      this.index = 0;\n      this.validateIndex();\n  }\n\n  getImages(): string[] | SafeResourceUrl[] {\n      if (!this.images) {\n          return [];\n      }\n\n      if (this.remainingCount) {\n          return this.images.slice(0, this.rows * this.columns);\n      } \n      else if (this.lazyLoading && this.order != NgxGalleryOrder.Row) {\n          let stopIndex = 0;\n\n          if (this.order === NgxGalleryOrder.Column) {\n              stopIndex = (this.index + this.columns + this.moveSize) * this.rows;\n          }\n          else if (this.order === NgxGalleryOrder.Page) {\n              stopIndex = this.index + ((this.columns * this.rows) * 2);\n          }\n\n          if (stopIndex <= this.minStopIndex) {\n              stopIndex = this.minStopIndex;\n          } else {\n              this.minStopIndex = stopIndex;\n          }\n\n          return this.images.slice(0, stopIndex);\n      } \n      else {\n          return this.images;\n      }\n  }\n\n  handleClick(event: Event, index: number): void {\n      if (!this.hasLink(index)) {\n          this.selectedIndex = index;\n          this.onActiveChange.emit(index);\n\n          event.stopPropagation();\n          event.preventDefault();\n      }\n  }\n\n  hasLink(index: number): boolean {\n      if (this.links && this.links.length && this.links[index]) return true;\n  }\n\n  moveRight(): void {\n      if (this.canMoveRight()) {\n          this.index += this.moveSize;\n          let maxIndex = this.getMaxIndex() - this.columns;\n\n          if (this.index > maxIndex) {\n              this.index = maxIndex;\n          }\n\n          this.setThumbnailsPosition();\n      }\n  }\n\n  moveLeft(): void {\n      if (this.canMoveLeft()) {\n          this.index -= this.moveSize;\n\n          if (this.index < 0) {\n              this.index = 0;\n          }\n\n          this.setThumbnailsPosition();\n      }\n  }\n\n  canMoveRight(): boolean {\n      return this.index + this.columns < this.getMaxIndex() ? true : false;\n  }\n\n  canMoveLeft(): boolean {\n      return this.index !== 0 ? true : false;\n  }\n\n  getThumbnailLeft(index: number): SafeStyle {\n      let calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n          calculatedIndex = Math.floor(index / this.rows);\n      }\n      else if (this.order === NgxGalleryOrder.Page) {\n          calculatedIndex = (index % this.columns) + (Math.floor(index / (this.rows * this.columns)) * this.columns);\n      }\n      else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n          calculatedIndex = index % this.columns;\n      }\n      else {\n          calculatedIndex = index % Math.ceil(this.images.length / this.rows);\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.columns);\n  }\n\n  getThumbnailTop(index: number): SafeStyle {\n      let calculatedIndex;\n\n      if (this.order === NgxGalleryOrder.Column) {\n          calculatedIndex = index % this.rows;\n      }\n      else if (this.order === NgxGalleryOrder.Page) {\n          calculatedIndex = Math.floor(index / this.columns) - (Math.floor(index / (this.rows * this.columns)) * this.rows);\n      }\n      else if (this.order == NgxGalleryOrder.Row && this.remainingCount) {\n          calculatedIndex = Math.floor(index / this.columns);\n      }\n      else {\n          calculatedIndex = Math.floor(index / Math.ceil(this.images.length / this.rows));\n      }\n\n      return this.getThumbnailPosition(calculatedIndex, this.rows);\n  }\n\n  getThumbnailWidth(): SafeStyle {\n      return this.getThumbnailDimension(this.columns);\n  }\n\n  getThumbnailHeight(): SafeStyle {\n      return this.getThumbnailDimension(this.rows);\n  }\n\n  setThumbnailsPosition(): void {\n      this.thumbnailsLeft = - ((100 / this.columns) * this.index) + '%'\n\n      this.thumbnailsMarginLeft = - ((this.margin - (((this.columns - 1)\n      * this.margin) / this.columns)) * this.index) + 'px';\n  }\n\n  setDefaultPosition(): void {\n      this.thumbnailsLeft = '0px';\n      this.thumbnailsMarginLeft = '0px';\n  }\n\n  canShowArrows(): boolean {\n      if (this.remainingCount) {\n          return false;\n      } else if (this.arrows && this.images && this.images.length > this.getVisibleCount()\n          && (!this.arrowsAutoHide || this.mouseenter)) {\n          return true;\n      } else {\n          return false;\n      }\n  }\n\n  validateIndex(): void {\n      if (this.images) {\n          let newIndex;\n\n          if (this.order === NgxGalleryOrder.Column) {\n              newIndex = Math.floor(this.selectedIndex / this.rows);\n          } else {\n              newIndex = this.selectedIndex % Math.ceil(this.images.length / this.rows);\n          }\n\n          if (this.remainingCount) {\n              newIndex = 0;\n          }\n\n          if (newIndex < this.index || newIndex >= this.index + this.columns) {\n              const maxIndex = this.getMaxIndex() - this.columns;\n              this.index = newIndex > maxIndex ? maxIndex : newIndex;\n\n              this.setThumbnailsPosition();\n          }\n      }\n  }\n\n  getSafeUrl(image: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(this.helperService.getBackgroundUrl(image));\n  }\n\n  private getThumbnailPosition(index: number, count: number): SafeStyle {\n      return this.getSafeStyle('calc(' + ((100 / count) * index) + '% + '\n          + ((this.margin - (((count - 1) * this.margin) / count)) * index) + 'px)');\n  }\n\n  private getThumbnailDimension(count: number): SafeStyle {\n      if (this.margin !== 0) {\n          return this.getSafeStyle('calc(' + (100 / count) + '% - '\n              + (((count - 1) * this.margin) / count) + 'px)');\n      } else {\n          return this.getSafeStyle('calc(' + (100 / count) + '% + 1px)');\n      }\n  }\n\n  private getMaxIndex(): number {\n      if (this.order == NgxGalleryOrder.Page) {\n          let maxIndex = (Math.floor(this.images.length / this.getVisibleCount()) * this.columns);\n\n          if (this.images.length % this.getVisibleCount() > this.columns) {\n              maxIndex += this.columns;\n          }\n          else {\n              maxIndex += this.images.length % this.getVisibleCount();\n          }\n\n          return maxIndex;\n      }\n      else {\n          return Math.ceil(this.images.length / this.rows);\n      }\n  }\n\n  private getVisibleCount(): number {\n      return this.columns * this.rows;\n  }\n\n  private getSafeStyle(value: string): SafeStyle {\n      return this.sanitization.bypassSecurityTrustStyle(value);\n  }\n}\n","import { Component, OnInit, DoCheck, AfterViewInit, EventEmitter, Output, ViewChild, HostBinding, ElementRef, HostListener, Input } from '@angular/core';\nimport { SafeResourceUrl } from '@angular/platform-browser';\nimport { NgxGalleryHelperService } from './ngx-gallery-helper.service';\nimport { NgxGalleryOptions } from './ngx-gallery-options';\nimport { NgxGalleryImageSize } from './ngx-gallery-image-size.model';\nimport { NgxGalleryImage } from './ngx-gallery-image.model';\nimport { NgxGalleryOrderedImage } from './ngx-gallery-ordered-image.model';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image/ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport { NgxGalleryLayout } from './ngx-gallery-layout.model';\n\n@Component({\n  selector: 'ngx-gallery',\n  template: `\n    <div class=\"ngx-gallery-layout {{currentOptions?.layout}}\">\n      <ngx-gallery-image *ngIf=\"currentOptions?.image\" [style.height]=\"getImageHeight()\" [images]=\"mediumImages\" [clickable]=\"currentOptions?.preview\" [selectedIndex]=\"selectedIndex\" [arrows]=\"currentOptions?.imageArrows\" [arrowsAutoHide]=\"currentOptions?.imageArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [swipe]=\"currentOptions?.imageSwipe\" [animation]=\"currentOptions?.imageAnimation\" [size]=\"currentOptions?.imageSize\" [autoPlay]=\"currentOptions?.imageAutoPlay\" [autoPlayInterval]=\"currentOptions?.imageAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.imageAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.imageInfinityMove\"  [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.imageActions\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.imageDescription\" [bullets]=\"currentOptions?.imageBullets\" (onClick)=\"openPreview($event)\" (onActiveChange)=\"selectFromImage($event)\"></ngx-gallery-image>\n\n      <ngx-gallery-thumbnails *ngIf=\"currentOptions?.thumbnails\" [style.marginTop]=\"getThumbnailsMarginTop()\" [style.marginBottom]=\"getThumbnailsMarginBottom()\" [style.height]=\"getThumbnailsHeight()\" [images]=\"smallImages\" [links]=\"currentOptions?.thumbnailsAsLinks ? links : []\" [labels]=\"labels\" [linkTarget]=\"currentOptions?.linkTarget\" [selectedIndex]=\"selectedIndex\" [columns]=\"currentOptions?.thumbnailsColumns\" [rows]=\"currentOptions?.thumbnailsRows\" [margin]=\"currentOptions?.thumbnailMargin\" [arrows]=\"currentOptions?.thumbnailsArrows\" [arrowsAutoHide]=\"currentOptions?.thumbnailsArrowsAutoHide\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [clickable]=\"currentOptions?.image || currentOptions?.preview\" [swipe]=\"currentOptions?.thumbnailsSwipe\" [size]=\"currentOptions?.thumbnailSize\" [moveSize]=\"currentOptions?.thumbnailsMoveSize\" [order]=\"currentOptions?.thumbnailsOrder\" [remainingCount]=\"currentOptions?.thumbnailsRemainingCount\" [lazyLoading]=\"currentOptions?.lazyLoading\" [actions]=\"currentOptions?.thumbnailActions\"  (onActiveChange)=\"selectFromThumbnails($event)\"></ngx-gallery-thumbnails>\n\n      <ngx-gallery-preview [images]=\"bigImages\" [descriptions]=\"descriptions\" [showDescription]=\"currentOptions?.previewDescription\" [arrowPrevIcon]=\"currentOptions?.arrowPrevIcon\" [arrowNextIcon]=\"currentOptions?.arrowNextIcon\" [closeIcon]=\"currentOptions?.closeIcon\" [fullscreenIcon]=\"currentOptions?.fullscreenIcon\" [spinnerIcon]=\"currentOptions?.spinnerIcon\" [arrows]=\"currentOptions?.previewArrows\" [arrowsAutoHide]=\"currentOptions?.previewArrowsAutoHide\" [swipe]=\"currentOptions?.previewSwipe\" [fullscreen]=\"currentOptions?.previewFullscreen\" [forceFullscreen]=\"currentOptions?.previewForceFullscreen\" [closeOnClick]=\"currentOptions?.previewCloseOnClick\" [closeOnEsc]=\"currentOptions?.previewCloseOnEsc\" [keyboardNavigation]=\"currentOptions?.previewKeyboardNavigation\" [animation]=\"currentOptions?.previewAnimation\" [autoPlay]=\"currentOptions?.previewAutoPlay\" [autoPlayInterval]=\"currentOptions?.previewAutoPlayInterval\" [autoPlayPauseOnHover]=\"currentOptions?.previewAutoPlayPauseOnHover\" [infinityMove]=\"currentOptions?.previewInfinityMove\" [zoom]=\"currentOptions?.previewZoom\" [zoomStep]=\"currentOptions?.previewZoomStep\" [zoomMax]=\"currentOptions?.previewZoomMax\" [zoomMin]=\"currentOptions?.previewZoomMin\" [zoomInIcon]=\"currentOptions?.zoomInIcon\" [zoomOutIcon]=\"currentOptions?.zoomOutIcon\" [actions]=\"currentOptions?.actions\" [rotate]=\"currentOptions?.previewRotate\" [rotateLeftIcon]=\"currentOptions?.rotateLeftIcon\" [rotateRightIcon]=\"currentOptions?.rotateRightIcon\" [download]=\"currentOptions?.previewDownload\" [downloadIcon]=\"currentOptions?.downloadIcon\" [bullets]=\"currentOptions?.previewBullets\" (onClose)=\"onPreviewClose()\" (onOpen)=\"onPreviewOpen()\" (onActiveChange)=\"previewSelect($event)\" [class.ngx-gallery-active]=\"previewEnabled\"></ngx-gallery-preview>\n    </div>\n  `,\n  styleUrls: ['./ngx-gallery.component.scss'],\n  providers: [NgxGalleryHelperService]\n})\nexport class NgxGalleryComponent implements OnInit, DoCheck, AfterViewInit {\n  @Input() options: NgxGalleryOptions[];\n  @Input() images: NgxGalleryImage[];\n\n  @Output() imagesReady = new EventEmitter();\n  @Output() change = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n  @Output() previewOpen = new EventEmitter();\n  @Output() previewClose = new EventEmitter();\n  @Output() previewChange = new EventEmitter<{ index: number; image: NgxGalleryImage; }>();\n\n  smallImages: string[] | SafeResourceUrl[];\n  mediumImages: NgxGalleryOrderedImage[];\n  bigImages: string[] | SafeResourceUrl[];\n  descriptions: string[];\n  links: string[];\n  labels: string[];\n\n  oldImages: NgxGalleryImage[];\n  oldImagesLength = 0;\n\n  selectedIndex = 0;\n  previewEnabled: boolean;\n\n  currentOptions: NgxGalleryOptions;\n\n  private breakpoint: number | undefined = undefined;\n  private prevBreakpoint: number | undefined = undefined;\n  private fullWidthTimeout: any;\n\n  @ViewChild(NgxGalleryPreviewComponent) preview: NgxGalleryPreviewComponent;\n  @ViewChild(NgxGalleryImageComponent) image: NgxGalleryImageComponent;\n  @ViewChild(NgxGalleryThumbnailsComponent) thubmnails: NgxGalleryThumbnailsComponent;\n\n  @HostBinding('style.width') width: string;\n  @HostBinding('style.height') height: string;\n  @HostBinding('style.left') left: string;\n\n  constructor(private myElement: ElementRef) {}\n\n  ngOnInit() {\n      this.options = this.options.map((opt) => new NgxGalleryOptions(opt));\n      this.sortOptions();\n      this.setBreakpoint();\n      this.setOptions();\n      this.checkFullWidth();\n      if (this.currentOptions) {\n          this.selectedIndex = <number>this.currentOptions.startIndex;\n      }\n  }\n\n  ngDoCheck(): void {\n      if (this.images !== undefined && (this.images.length !== this.oldImagesLength)\n          || (this.images !== this.oldImages)) {\n          this.oldImagesLength = this.images.length;\n          this.oldImages = this.images;\n          this.setOptions();\n          this.setImages();\n\n          if (this.images && this.images.length) {\n              this.imagesReady.emit();\n          }\n\n          if (this.image) {\n              this.image.reset(<number>this.currentOptions.startIndex);\n          }\n\n          if (this.currentOptions.thumbnailsAutoHide && this.currentOptions.thumbnails\n              && this.images.length <= 1) {\n              this.currentOptions.thumbnails = false;\n              this.currentOptions.imageArrows = false;\n          }\n\n          this.resetThumbnails();\n      }\n  }\n\n  ngAfterViewInit(): void {\n      this.checkFullWidth();\n  }\n\n  @HostListener('window:resize') onResize() {\n      this.setBreakpoint();\n\n      if (this.prevBreakpoint !== this.breakpoint) {\n          this.setOptions();\n          this.resetThumbnails();\n      }\n\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n\n          if (this.fullWidthTimeout) {\n              clearTimeout(this.fullWidthTimeout);\n          }\n\n          this.fullWidthTimeout = setTimeout(() => {\n              this.checkFullWidth();\n          }, 200);\n      }\n  }\n\n  getImageHeight(): string {\n      return (this.currentOptions && this.currentOptions.thumbnails) ?\n          this.currentOptions.imagePercent + '%' : '100%';\n  }\n\n  getThumbnailsHeight(): string {\n      if (this.currentOptions && this.currentOptions.image) {\n          return 'calc(' + this.currentOptions.thumbnailsPercent + '% - '\n          + this.currentOptions.thumbnailsMargin + 'px)';\n      } else {\n          return '100%';\n      }\n  }\n\n  getThumbnailsMarginTop(): string {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsBottom) {\n          return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n          return '0px';\n      }\n  }\n\n  getThumbnailsMarginBottom(): string {\n      if (this.currentOptions && this.currentOptions.layout === NgxGalleryLayout.ThumbnailsTop) {\n          return this.currentOptions.thumbnailsMargin + 'px';\n      } else {\n          return '0px';\n      }\n  }\n\n  openPreview(index: number): void {\n      if (this.currentOptions.previewCustom) {\n          this.currentOptions.previewCustom(index);\n      } else {\n          this.previewEnabled = true;\n          this.preview.open(index);\n      }\n  }\n\n  onPreviewOpen(): void {\n      this.previewOpen.emit();\n\n      if (this.image && this.image.autoPlay) {\n          this.image.stopAutoPlay();\n      }\n  }\n\n  onPreviewClose(): void {\n      this.previewEnabled = false;\n      this.previewClose.emit();\n\n      if (this.image && this.image.autoPlay) {\n          this.image.startAutoPlay();\n      }\n  }\n\n  selectFromImage(index: number) {\n      this.select(index);\n  }\n\n  selectFromThumbnails(index: number) {\n      this.select(index);\n\n      if (this.currentOptions && this.currentOptions.thumbnails && this.currentOptions.preview\n          && (!this.currentOptions.image || this.currentOptions.thumbnailsRemainingCount)) {\n          this.openPreview(this.selectedIndex);\n      }\n  }\n\n  show(index: number): void {\n      this.select(index);\n  }\n\n  showNext(): void {\n      this.image.showNext();\n  }\n\n  showPrev(): void {\n      this.image.showPrev();\n  }\n\n  canShowNext(): boolean {\n      if (this.images && this.currentOptions) {\n          return (this.currentOptions.imageInfinityMove || this.selectedIndex < this.images.length - 1)\n              ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  canShowPrev(): boolean {\n      if (this.images && this.currentOptions) {\n          return (this.currentOptions.imageInfinityMove || this.selectedIndex > 0) ? true : false;\n      } else {\n          return false;\n      }\n  }\n\n  previewSelect(index: number) {\n      this.previewChange.emit({index, image: this.images[index]});\n  }\n\n  moveThumbnailsRight() {\n      this.thubmnails.moveRight();\n  }\n\n  moveThumbnailsLeft() {\n      this.thubmnails.moveLeft();\n  }\n\n  canMoveThumbnailsRight() {\n      return this.thubmnails.canMoveRight();\n  }\n\n  canMoveThumbnailsLeft() {\n      return this.thubmnails.canMoveLeft();\n  }\n\n  private resetThumbnails() {\n      if (this.thubmnails) {\n          this.thubmnails.reset(<number>this.currentOptions.startIndex);\n      }\n  }\n\n  private select(index: number) {\n      this.selectedIndex = index;\n\n      this.change.emit({\n          index,\n          image: this.images[index]\n      });\n  }\n\n  private checkFullWidth(): void {\n      if (this.currentOptions && this.currentOptions.fullWidth) {\n          this.width = document.body.clientWidth + 'px';\n          this.left = (-(document.body.clientWidth -\n              this.myElement.nativeElement.parentNode.innerWidth) / 2) + 'px';\n      }\n  }\n\n  private setImages(): void {\n      this.smallImages = this.images.map((img) => <string>img.small);\n      this.mediumImages = this.images.map((img, i) => new NgxGalleryOrderedImage({\n          src: img.medium,\n          index: i\n      }));\n      this.bigImages = this.images.map((img) => <string>img.big);\n      this.descriptions = this.images.map((img) => <string>img.description);\n      this.links = this.images.map((img) => <string>img.url);\n      this.labels = this.images.map((img) => <string>img.label);\n  }\n\n  private setBreakpoint(): void {\n      this.prevBreakpoint = this.breakpoint;\n      let breakpoints;\n\n      if (typeof window !== 'undefined') {\n          breakpoints = this.options.filter((opt) => opt.breakpoint >= window.innerWidth)\n              .map((opt) => opt.breakpoint);\n      }\n\n      if (breakpoints && breakpoints.length) {\n          this.breakpoint = breakpoints.pop();\n      } else {\n          this.breakpoint = undefined;\n      }\n  }\n\n  private sortOptions(): void {\n      this.options = [\n          ...this.options.filter((a) => a.breakpoint === undefined),\n          ...this.options\n              .filter((a) => a.breakpoint !== undefined)\n              .sort((a, b) => b.breakpoint - a.breakpoint)\n      ];\n  }\n\n  private setOptions(): void {\n      this.currentOptions = new NgxGalleryOptions({});\n\n      this.options\n          .filter((opt) => opt.breakpoint === undefined || opt.breakpoint >= this.breakpoint)\n          .map((opt) => this.combineOptions(this.currentOptions, opt));\n\n      this.width = <string>this.currentOptions.width;\n      this.height = <string>this.currentOptions.height;\n  }\n\n  private combineOptions(first: NgxGalleryOptions, second: NgxGalleryOptions) {\n      Object.keys(second).map((val) => first[val] = second[val] !== undefined ? second[val] : first[val]);\n  }\n}\n","import { Component, ChangeDetectionStrategy, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-action',\n  templateUrl: './ngx-gallery-action.component.html',\n  styleUrls: ['./ngx-gallery-action.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class NgxGalleryActionComponent {\n  @Input() icon: string;\n  @Input() disabled = false;\n  @Input() titleText = '';\n\n  @Output() onClick: EventEmitter<Event> = new EventEmitter();\n\n  handleClick(event: Event) {\n      if (!this.disabled) {\n          this.onClick.emit(event);\n      }\n\n      event.stopPropagation();\n      event.preventDefault();\n  }\n}\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-arrows',\n  templateUrl: './ngx-gallery-arrows.component.html',\n  styleUrls: ['./ngx-gallery-arrows.component.scss']\n})\nexport class NgxGalleryArrowsComponent{\n  @Input() prevDisabled: boolean;\n  @Input() nextDisabled: boolean;\n  @Input() arrowPrevIcon: string;\n  @Input() arrowNextIcon: string;\n\n  @Output() onPrevClick = new EventEmitter();\n  @Output() onNextClick = new EventEmitter();\n\n  handlePrevClick(): void {\n      this.onPrevClick.emit();\n  }\n\n  handleNextClick(): void {\n      this.onNextClick.emit();\n  }\n}\n","import { Component, Input, EventEmitter, Output } from '@angular/core';\n\n@Component({\n  selector: 'ngx-gallery-bullets',\n  templateUrl: './ngx-gallery-bullets.component.html',\n  styleUrls: ['./ngx-gallery-bullets.component.scss']\n})\nexport class NgxGalleryBulletsComponent {\n  @Input() count: number;\n  @Input() active: number = 0;\n\n  @Output() onChange = new EventEmitter();\n\n  getBullets(): number[] {\n      return Array(this.count);\n  }\n\n  handleChange(event: Event, index: number): void {\n      this.onChange.emit(index);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { NgxGalleryComponent } from './ngx-gallery.component';\nimport { NgxGalleryPreviewComponent } from './ngx-gallery-preview/ngx-gallery-preview.component';\nimport { NgxGalleryImageComponent } from './ngx-gallery-image/ngx-gallery-image.component';\nimport { NgxGalleryThumbnailsComponent } from './ngx-gallery-thumbnails/ngx-gallery-thumbnails.component';\nimport { NgxGalleryActionComponent } from './ngx-gallery-action/ngx-gallery-action.component';\nimport { NgxGalleryArrowsComponent } from './ngx-gallery-arrows/ngx-gallery-arrows.component';\nimport { NgxGalleryBulletsComponent } from './ngx-gallery-bullets/ngx-gallery-bullets.component';\nimport { CommonModule } from '@angular/common';\n\n\n\n@NgModule({\n  declarations: [\n    NgxGalleryComponent,\n    NgxGalleryPreviewComponent, \n    NgxGalleryImageComponent,\n    NgxGalleryThumbnailsComponent,\n    NgxGalleryActionComponent,\n    NgxGalleryArrowsComponent,\n    NgxGalleryBulletsComponent\n  ],\n  imports: [\n    CommonModule\n  ],\n  exports: [NgxGalleryComponent]\n})\nexport class NgxGalleryModule { }\n","import { SafeResourceUrl } from '@angular/platform-browser';\r\n\r\nexport interface INgxGalleryImage {\r\n    small?: string | SafeResourceUrl;\r\n    medium?: string | SafeResourceUrl;\r\n    big?: string | SafeResourceUrl;\r\n    description?: string;\r\n    url?: string;\r\n    label?: string;\r\n}\r\n\r\nexport class NgxGalleryImage implements INgxGalleryImage {\r\n    small?: string | SafeResourceUrl;\r\n    medium?: string | SafeResourceUrl;\r\n    big?: string | SafeResourceUrl;\r\n    description?: string;\r\n    url?: string;\r\n    label?: string;\r\n\r\n    constructor(obj: INgxGalleryImage) {\r\n        this.small = obj.small;\r\n        this.medium = obj.medium;\r\n        this.big = obj.big;\r\n        this.description = obj.description;\r\n        this.url = obj.url;\r\n        this.label = obj.label;\r\n    }\r\n}\r\n"]}